<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BlazorFormManager</name>
    </assembly>
    <members>
        <member name="T:BlazorFormManager.ComponentModel.AutoInputMetadata">
            <summary>
            Holds metadata required for rendering an auto-generated input component.
            </summary>
        </member>
        <member name="M:BlazorFormManager.ComponentModel.AutoInputMetadata.#ctor(System.Object,BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute)">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.ComponentModel.AutoInputMetadata"/> class using the specified parameters.
            </summary>
            <param name="model">The model associated with an instance of an <see cref="T:BlazorFormManager.ComponentModel.IAutoInputComponent"/> component.</param>
            <param name="attr">An object that encapsulates display-related metadata.</param>
            
        </member>
        <member name="P:BlazorFormManager.ComponentModel.AutoInputMetadata.Value">
            <summary>
            Gets or sets the value of the input. This should be used with two-way binding.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.AutoInputMetadata.Options">
            <summary>
            Gets a collection of <see cref="T:BlazorFormManager.SelectOption"/> items for a 'select'
            or 'input' element of type 'radio' to generate.
            </summary>
        </member>
        <member name="M:BlazorFormManager.ComponentModel.AutoInputMetadata.GetDisplayName">
            <summary>
            Returns the display name for an input.
            </summary>
            <returns></returns>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.AutoInputMetadata.IsInputCheckbox">
            <summary>
            Indicates whether the input should be of type checkbox.
            </summary>
        </member>
        <member name="T:BlazorFormManager.ComponentModel.FormDisplayGroupMetadata">
            <summary>
            Holds metadata related to the way a group of inputs is layed out.
            </summary>
        </member>
        <member name="M:BlazorFormManager.ComponentModel.FormDisplayGroupMetadata.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.ComponentModel.FormDisplayGroupMetadata"/> class.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.FormDisplayGroupMetadata.Items">
            <summary>
            Gets a collection of <see cref="T:BlazorFormManager.ComponentModel.AutoInputMetadata"/> elements.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.FormDisplayGroupMetadata.Name">
            <summary>
            Gets or sets the name of the section.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.FormDisplayGroupMetadata.CssClass">
            <summary>
            Gets or sets the CSS class for a section.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.FormDisplayGroupMetadata.ShowName">
            <summary>
            Indicates whether the section name should be displayed.
            </summary>
        </member>
        <member name="T:BlazorFormManager.ComponentModel.IAutoInputComponent">
            <summary>
            Provides a mecanism to update the <see cref="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.CurrentValue"/> property of an input component.
            </summary>
        </member>
        <member name="M:BlazorFormManager.ComponentModel.IAutoInputComponent.SetCurrentValue(System.Object,System.String)">
            <summary>
            When implemented by a class, updates the <see cref="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.CurrentValue"/> property of an input component.
            </summary>
            <param name="value">The value to set.</param>
            <param name="propertyName">The name of the property whose value changed.</param>
        </member>
        <member name="T:BlazorFormManager.ComponentModel.MetadataExtensions">
            <summary>
            Provides extension methods for extracting and manipulating metadata, such as custom attributes.
            </summary>
        </member>
        <member name="M:BlazorFormManager.ComponentModel.MetadataExtensions.ExtractMetadata``1(``0,System.Collections.Generic.IReadOnlyCollection{BlazorFormManager.ComponentModel.FormDisplayGroupMetadata}@)">
            <summary>
            Generates a grouped collection of <see cref="T:BlazorFormManager.ComponentModel.AutoInputMetadata"/> instances
            extracted from custom attributes of types <see cref="T:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute"/>
            and <see cref="T:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayDefaultAttribute"/> that decorate the specified 
            <typeparamref name="T"/> type.
            </summary>
            <typeparam name="T">The type of the object from which to extract metadata.</typeparam>
            <param name="instance">An instance of the specified <typeparamref name="T"/> type.</param>
            <param name="result">Returns a grouped collection of <see cref="T:BlazorFormManager.ComponentModel.AutoInputMetadata"/> objects.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.ComponentModel.MetadataExtensions.ExtractMetadata(System.Type,System.Object,System.Collections.Generic.IReadOnlyCollection{BlazorFormManager.ComponentModel.FormDisplayGroupMetadata}@)">
            <summary>
            Generates a grouped collection of <see cref="T:BlazorFormManager.ComponentModel.AutoInputMetadata"/> instances
            extracted from custom attributes of types <see cref="T:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute"/>
            and <see cref="T:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayDefaultAttribute"/> that decorate the specified 
            <paramref name="type"/>.
            </summary>
            <param name="type">The type of the object from which to extract metadata.</param>
            <param name="instance">An instance of the specified <paramref name="type"/>.</param>
            <param name="result">Returns a grouped collection of <see cref="T:BlazorFormManager.ComponentModel.AutoInputMetadata"/> objects.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.ComponentModel.MetadataExtensions.TryGetMetadata(System.Type,System.String,BlazorFormManager.ComponentModel.AutoInputMetadata@)">
            <summary>
            Attempts to get a cached instance of the <see cref="T:BlazorFormManager.ComponentModel.AutoInputMetadata"/>
            class whose <see cref="P:BlazorFormManager.ComponentModel.AutoInputMetadata.PropertyInfo"/>.Name matches the
            specified <paramref name="propertyName"/>.
            </summary>
            <param name="type">The type of the object to which <paramref name="propertyName"/> belongs.</param>
            <param name="propertyName">The name of the property for which to retrieve the metadata.</param>
            <param name="result">Returns the cached <see cref="T:BlazorFormManager.ComponentModel.AutoInputMetadata"/>, if any.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.ComponentModel.MetadataExtensions.TryGetMetadata(System.Type,System.Collections.Generic.IReadOnlyCollection{BlazorFormManager.ComponentModel.FormDisplayGroupMetadata}@)">
            <summary>
            Attempts to get the metadata value associated with the specified type.
            </summary>
            <param name="type">The type of the object from which to extract metadata.</param>
            <param name="result">Returns a grouped collection of <see cref="T:BlazorFormManager.ComponentModel.AutoInputMetadata"/> objects.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.ComponentModel.MetadataExtensions.RemoveIgnoredPropertiesFromObjectToBeSerialized(System.Object)">
            <summary>
            Make sure that properties decorated with an ignorable 
            custom attribute are NOT included for serialization.
            </summary>
            <param name="obj">The object to scan.</param>
            <returns>
            An initialized instance of the <see cref="T:BlazorFormManager.Collections.ObjectDictionary"/> class if 
            there are properties to be ignored; otherwise, <paramref name="obj"/>.
            </returns>
        </member>
        <member name="T:BlazorFormManager.ComponentModel.ViewAnnotations.CustomRenderMode">
            <summary>
            Specifies if components should support custom rendering or not.
            </summary>
        </member>
        <member name="F:BlazorFormManager.ComponentModel.ViewAnnotations.CustomRenderMode.Default">
            <summary>
            The default value is determined by a parent setting.
            </summary>
        </member>
        <member name="F:BlazorFormManager.ComponentModel.ViewAnnotations.CustomRenderMode.Disabled">
            <summary>
            Custom rendering is disabled.
            </summary>
        </member>
        <member name="F:BlazorFormManager.ComponentModel.ViewAnnotations.CustomRenderMode.Enabled">
            <summary>
            Custom rendering is enabled.
            </summary>
        </member>
        <member name="T:BlazorFormManager.ComponentModel.ViewAnnotations.DisplayIgnoreAttribute">
            <summary>
            Prevents a property from being included into the input element generation process.
            If this attribute is applied to a class, all public read/write properties that
            aren't decorated with <see cref="T:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute"/> will be ignored.
            </summary>
        </member>
        <member name="M:BlazorFormManager.ComponentModel.ViewAnnotations.DisplayIgnoreAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.ComponentModel.ViewAnnotations.DisplayIgnoreAttribute"/> class.
            </summary>
        </member>
        <member name="T:BlazorFormManager.ComponentModel.ViewAnnotations.DragDropAttribute">
            <summary>
            Indicates that an object supports drag and drop operations.
            </summary>
        </member>
        <member name="M:BlazorFormManager.ComponentModel.ViewAnnotations.DragDropAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.ComponentModel.ViewAnnotations.DragDropAttribute"/> class.
            </summary>
        </member>
        <member name="T:BlazorFormManager.ComponentModel.ViewAnnotations.FileCapableAttributeBase">
            <summary>
            Represents the base attribute for members capable of handling files.
            </summary>
        </member>
        <member name="M:BlazorFormManager.ComponentModel.ViewAnnotations.FileCapableAttributeBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.ComponentModel.ViewAnnotations.FileCapableAttributeBase"/> class.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.FileCapableAttributeBase.Accept">
            <summary>
            Gets or sets a comma-separated list of file name extensions that limits the 
            types of files a user can pick. If the value is null or empty (or only 
            whitespace) then any file can be picked.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.FileCapableAttributeBase.AcceptType">
            <summary>
            Gets or sets the type of file that can be picked up.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.FileCapableAttributeBase.Multiple">
            <summary>
            Indicates whether multiple file selection is allowed.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.FileCapableAttributeBase.DropTargetId">
            <summary>
            Gets or sets the identifier of an element that supports drag and drop.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.FileCapableAttributeBase.DropEffect">
            <summary>
            Gets or sets the icon that identifies a drag and drop operation. The default is 'copy'.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.FileCapableAttributeBase.Method">
            <summary>
            Gets or sets the method of the FileReader API (in JavaScript) to use.
            </summary>
        </member>
        <member name="T:BlazorFormManager.ComponentModel.ViewAnnotations.FileReaderMethod">
            <summary>
            Provides enumerated method names corresponding to JavaScript's FileReader API.
            </summary>
        </member>
        <member name="F:BlazorFormManager.ComponentModel.ViewAnnotations.FileReaderMethod.None">
            <summary>
            Nothing will be done.
            </summary>
        </member>
        <member name="F:BlazorFormManager.ComponentModel.ViewAnnotations.FileReaderMethod.ReadAsArrayBuffer">
            <summary>
            In JavaScript:
            Starts reading the contents of the specified Blob, once finished, the 
            result attribute contains an ArrayBuffer representing the file's data.
            </summary>
        </member>
        <member name="F:BlazorFormManager.ComponentModel.ViewAnnotations.FileReaderMethod.ReadAsBinaryString">
            <summary>
            In JavaScript:
            Starts reading the contents of the specified Blob, once finished, the 
            result attribute contains the raw binary data from the file as a string.
            </summary>
        </member>
        <member name="F:BlazorFormManager.ComponentModel.ViewAnnotations.FileReaderMethod.ReadAsDataURL">
            <summary>
            In JavaScript:
            Starts reading the contents of the specified Blob, once finished, the 
            result attribute contains a data: URL representing the file's data.
            </summary>
        </member>
        <member name="F:BlazorFormManager.ComponentModel.ViewAnnotations.FileReaderMethod.ReadAsText">
            <summary>
            In JavaScript:
            Starts reading the contents of the specified Blob, once finished, the 
            result attribute contains the contents of the file as a text string. 
            An optional encoding name can be specified.
            </summary>
        </member>
        <member name="T:BlazorFormManager.ComponentModel.ViewAnnotations.FormAttributeBase">
            <summary>
            Represents the base class for form-related custom attributes.
            </summary>
        </member>
        <member name="M:BlazorFormManager.ComponentModel.ViewAnnotations.FormAttributeBase.#ctor">
            <summary>
            Intializes a new instance of the <see cref="T:BlazorFormManager.ComponentModel.ViewAnnotations.FormAttributeBase"/> class.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormAttributeBase.InputCssClass">
            <summary>
            Gets or sets the CSS class (e.g. form-control) added to the input.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormAttributeBase.Prompt">
            <summary>
            Gets or sets a value that will be used to set the watermark for prompts in the UI.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormAttributeBase.Disabled">
            <summary>
            Indicates whether the input is disabled.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormAttributeBase.Ignore">
            <summary>
            Indicates whether this custom attribute should be ignored during rendering.
            </summary>
        </member>
        <member name="T:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute">
            <summary>
            Represents a custom attribute that specifies layout for a form input.
            </summary>
        </member>
        <member name="F:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute.Empty">
            <summary>
            Provides a value to use for default form display options.
            </summary>
        </member>
        <member name="M:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute"/> class.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute.GroupName">
            <summary>
            Gets or sets a value that is used to group fields in the UI.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute.Name">
            <summary>
            Gets or sets a value that is used for display in the UI.
            Set to an empty string (value of <see cref="F:System.String.Empty"/>, not null) to omit the label.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute.ShortName">
            <summary>
            Gets or sets a value that is used for the grid column label.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute.Description">
            <summary>
             Gets or sets a value that is used to display a description in the UI.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute.ResourceType">
            <summary>
            Gets or sets the type that contains the resources for the <see cref="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute.ShortName"/>,
            <see cref="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute.Name"/>, <see cref="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormAttributeBase.Prompt"/>, and <see cref="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute.Description"/> properties.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute.Order">
            <summary>
            Gets or sets the order weight of the column.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute.ColumnCssClass">
            <summary>
            Gets or sets the CSS class (e.g. col-md-4) used for an element (column)
            wrapped around the input.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute.UIHint">
            <summary>
            Gets or sets a suggestion for the HTML element to generate. Supported
            elements are all standard HTML data collection elements such as input,
            select, textarea, etc. Other elements are not supported.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute.UITypeHint">
            <summary>
            Gets or sets a suggestion for the input type to generate. Supported types are
            all standard HTML input types (e. g. text, checkbox, number, date, file...).
            All type names must be in lower-case characters.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute.Icon">
            <summary>
            Gets or sets an icon associated with the generated input.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute.Format">
            <summary>
            Gets or sets the data format. If you want to format a <see cref="T:System.DateTime"/>
            or <see cref="T:System.DateTimeOffset"/>, you must specify a valid value for 
            <see cref="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute.CultureName"/> and set <see cref="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute.UITypeHint"/> to 'text'.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute.CultureName">
            <summary>
            The case-insensitive name of a culture to use for conversions and formatting.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute.NumberStyles">
            <summary>
            Determines the styles permitted in numeric string arguments that are passed to
            the Parse and TryParse methods of the integral and floating-point numeric types.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute.IsInputCheckbox">
            <summary>
            Indicates whether the <see cref="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute.UITypeHint"/> property value is checkbox.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute.IsInputRadio">
            <summary>
            Indicates whether the <see cref="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute.UITypeHint"/> property value is radio.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute.CustomRenderMode">
            <summary>
            Indicates whether rendering custom inputs is disabled, enabled or determined by the default value.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute.IsInputCheckboxOrRadio">
            <summary>
            Returns true if either of <see cref="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute.IsInputCheckbox"/> or <see cref="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute.IsInputRadio"/> is true.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute.FileAttribute">
            <summary>
            Gets or sets the <see cref="T:BlazorFormManager.ComponentModel.ViewAnnotations.InputFileAttribute"/> associated with the 
            property that this <see cref="T:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute"/> decorates.
            </summary>
        </member>
        <member name="M:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute.GetProperty">
            <summary>
            Gets the <see cref="T:System.Reflection.PropertyInfo"/> of the model's property that the current attribute decorates.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute.SetProperty(System.Reflection.PropertyInfo)">
            <summary>
            Sets the <see cref="T:System.Reflection.PropertyInfo"/> of the model's property that the current attribute decorates.
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayDefaultAttribute">
            <summary>
            Represents a custom attributes that encapsulates default 
            values for an instance of the <see cref="T:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute"/>.
            </summary>
        </member>
        <member name="M:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayDefaultAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayDefaultAttribute"/> class.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayDefaultAttribute.GroupCssClass">
            <summary>
            Gets or sets the CSS class (e.g. row) for a section element.
            The default value is "row".
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayDefaultAttribute.ColumnCssClass">
            <summary>
            Gets or sets the CSS class (e.g. col) for an HTML element wrapped around an input.
            The default value is "col".
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayDefaultAttribute.ShowGroupName">
            <summary>
            Indicates whether to display the name of a group.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayDefaultAttribute.CustomRenderMode">
            <summary>
            Indicates whether rendering custom inputs is disabled, enabled or determined
            by the default value. The default is <see cref="F:BlazorFormManager.ComponentModel.ViewAnnotations.CustomRenderMode.Enabled"/>.
            </summary>
        </member>
        <member name="M:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayDefaultAttribute.CreateDefault">
            <summary>
            Creates a new instance of the <see cref="T:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayAttribute"/> from matching 
            properties of the current <see cref="T:BlazorFormManager.ComponentModel.ViewAnnotations.FormDisplayDefaultAttribute"/> instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:BlazorFormManager.ComponentModel.ViewAnnotations.ImagePreviewAttribute">
            <summary>
            Represents a custom attribute that is used to generate inputs of type file,
            provides settings for image file reading and automatic preview generation 
            using JavaScript's FileReader API.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.ImagePreviewAttribute.TargetElementIdSuffix">
            <summary>
            Gets or sets the default suffix for <see cref="P:BlazorFormManager.ComponentModel.ViewAnnotations.ImagePreviewAttribute.TargetElementId"/>.
            </summary>
        </member>
        <member name="M:BlazorFormManager.ComponentModel.ViewAnnotations.ImagePreviewAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.ComponentModel.ViewAnnotations.ImagePreviewAttribute"/> class
            by setting the <see cref="P:BlazorFormManager.ComponentModel.ViewAnnotations.FileCapableAttributeBase.AcceptType"/> property value to
            'image' and the <see cref="P:BlazorFormManager.ComponentModel.ViewAnnotations.FileCapableAttributeBase.Method"/> property value to
            <see cref="F:BlazorFormManager.ComponentModel.ViewAnnotations.FileReaderMethod.ReadAsDataURL"/>.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.ImagePreviewAttribute.TargetElementId">
            <summary>
            Gets or sets the identifier of an HTML element (typically a &lt;img /> tag)
            that will display the image. If this property's value is set, it can greatly
            improve performance of file reading operation as it avoids calling back 
            .NET managed code from JavaScript with a huge amount of base64-encoded URL.
            By convention, if this property's value is null, the name of the property
            that it decorates is used with the <see cref="P:BlazorFormManager.ComponentModel.ViewAnnotations.ImagePreviewAttribute.TargetElementIdSuffix"/> value
            (e.g. the property 'Photo' will have a target element id of 'PhotoPreview').
            If the value is empty, then the target element id should not be used.
            If specified, this property takes precedence over <see cref="P:BlazorFormManager.ComponentModel.ViewAnnotations.ImagePreviewAttribute.AutoGenerate"/>.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.ImagePreviewAttribute.TargetElementAttributeName">
            <summary>
            Gets or sets the name of the target element's attribute name that will 
            receive the base64-encoded data URL. The default value is 'src'.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.ImagePreviewAttribute.AutoGenerate">
            <summary>
            Indicates whether a preview should be automatically generated for every
            selected image. The default value is true.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.ImagePreviewAttribute.GenerateFileInfo">
            <summary>
            Indicates whether to include file metadata (name, size, etc.).
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.ImagePreviewAttribute.Width">
            <summary>
            Gets or sets the preferred width of the thumbnail to be generated.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ComponentModel.ViewAnnotations.ImagePreviewAttribute.Height">
            <summary>
            Gets or sets the preferred height of the thumbnail to be generated.
            </summary>
        </member>
        <member name="T:BlazorFormManager.ComponentModel.ViewAnnotations.InputFileAttribute">
            <summary>
            Represents a custom attribute that is used to generate inputs of type file and
            provides settings for file reading using JavaScript's FileReader API.
            </summary>
        </member>
        <member name="M:BlazorFormManager.ComponentModel.ViewAnnotations.InputFileAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.ComponentModel.ViewAnnotations.InputFileAttribute"/> class.
            </summary>
        </member>
        <member name="M:BlazorFormManager.ComponentModel.ViewAnnotations.InputFileAttribute.Clone">
            <summary>
            Creates and returns a shallow copy of the current 
            <see cref="T:BlazorFormManager.ComponentModel.ViewAnnotations.InputFileAttribute"/> instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:BlazorFormManager.Components.AutoEditFormBase`1">
            <summary>
            Represents a form that automatically generates inputs based on declarative layout specifications.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
        </member>
        <member name="P:BlazorFormManager.Components.AutoEditFormBase`1.DisplayGroups">
            <summary>
            Gets the collection of <see cref="T:BlazorFormManager.ComponentModel.FormDisplayGroupMetadata"/> retrieved from
            layout attributes of the associated model.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.AutoEditFormBase`1.FormHeader">
            <summary>
            Gets or sets the form header render fragment.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.AutoEditFormBase`1.FormFooter">
            <summary>
            Gets or sets the form footer render fragment.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.AutoEditFormBase`1.BeforeDisplayGroups">
            <summary>
            Gets or sets the content rendered before the <see cref="T:BlazorFormManager.Components.FormDisplayGroup"/>s.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.AutoEditFormBase`1.AfterDisplayGroups">
            <summary>
            Gets or sets the content rendered after the <see cref="T:BlazorFormManager.Components.FormDisplayGroup"/>s.
            </summary>
        </member>
        <member name="M:BlazorFormManager.Components.AutoEditFormBase`1.NotifyModelChanged">
            <inheritdoc/>
        </member>
        <member name="M:BlazorFormManager.Components.AutoEditFormBase`1.AttachFieldChangedListener">
            <summary>
            This method does nothing on purpose to avoid attaching field 
            change notifications to the underlying <see cref="T:Microsoft.AspNetCore.Components.Forms.EditContext"/>.
            <see cref="E:Microsoft.AspNetCore.Components.Forms.EditContext.OnFieldChanged"/> currently doesn't provide the 
            changed value. <see cref="T:BlazorFormManager.Components.AutoInputBase"/> makes it possible to detect both 
            field changes and the corresponding value that was changed.
            </summary>
        </member>
        <member name="M:BlazorFormManager.Components.AutoEditFormBase`1.DetachFieldChangedListener">
            <summary>
            This method does nothing on purpose to avoid detaching from something that 
            was never attached to.
            </summary>
        </member>
        <member name="M:BlazorFormManager.Components.AutoEditFormBase`1.OnGetModelAsync">
            <inheritdoc/>
        </member>
        <member name="T:BlazorFormManager.Components.AutoInputBase">
            <summary>
            A base class for form input components generated on the fly.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.AutoInputBase.Metadata">
            <summary>
            Gets or sets metadata for generating a form input.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.AutoInputBase.ChildContent">
            <summary>
            Gets or sets the child content to be rendering inside the element.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.AutoInputBase.Id">
            <summary>
            Gets or sets the input identifier.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.AutoInputBase.Form">
            <summary>
            Gets the associated <see cref="T:BlazorFormManager.Components.FormManagerBase"/>.
            </summary>
        </member>
        <member name="M:BlazorFormManager.Components.AutoInputBase.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <inheritdoc/>
        </member>
        <member name="M:BlazorFormManager.Components.AutoInputBase.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc />
        </member>
        <member name="M:BlazorFormManager.Components.AutoInputBase.FormatValueAsString(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:BlazorFormManager.Components.AutoInputBase.GetElement(System.String@)">
            <summary>
            Determines the frame to generate representing an HTML element.
            </summary>
            <param name="elementType">Returns the type of element to generate.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Components.AutoInputBase.RenderSelectOptions(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder,System.Int32)">
            <summary>
            Renders option elements for a select element to the supplied <see cref="T:Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder"/>.
            </summary>
            <param name="builder">A <see cref="T:Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder"/> that will receive the render output.</param>
            <param name="sequence">An integer that represents the position of the instruction in the source code.</param>
            <returns>An integer that represents the next position of the instruction in the source code.</returns>
        </member>
        <member name="M:BlazorFormManager.Components.AutoInputBase.RenderRadioOptions(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder,System.Int32)">
            <summary>
            Renders a collection of input elements of type 'radio' to the supplied <see cref="T:Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder"/>.
            </summary>
            <param name="builder">A <see cref="T:Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder"/> that will receive the render output.</param>
            <param name="sequence">An integer that represents the position of the instruction in the source code.</param>
            <returns>An integer that represents the next position of the instruction in the source code.</returns>
        </member>
        <member name="M:BlazorFormManager.Components.AutoInputBase.RenderInputCheckbox(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder,System.Int32,System.String,System.String)">
            <summary>
            Renders a checkbox to the supplied <see cref="T:Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder"/>.
            </summary>
            <param name="builder">A <see cref="T:Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder"/> that will receive the render output.</param>
            <param name="sequence">An integer that represents the position of the instruction in the source code.</param>
            <param name="additionalCssClass">The custom CSS class to add to the existing <see cref="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.CssClass"/>.</param>
            <param name="label">The text of the associated label. Should be null if you already wrapped the input inside a label.</param>
            <returns>An integer that represents the next position of the instruction in the source code.</returns>
        </member>
        <member name="M:BlazorFormManager.Components.AutoInputBase.RenderInputRadio(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Renders an input radio to the supplied <see cref="T:Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder"/>.
            </summary>
            <param name="builder">A <see cref="T:Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder"/> that will receive the render output.</param>
            <param name="sequence">An integer that represents the position of the instruction in the source code.</param>
            <param name="propertyName">The name of the input radio.</param>
            <param name="value">The value of the radio input.</param>
            <param name="additionalCssClass">The custom CSS class to add to the existing <see cref="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.CssClass"/>.</param>
            <param name="label">The text of the associated label. Should be null if you already wrapped the input inside a label.</param>
            <returns>An integer that represents the next position of the instruction in the source code.</returns>
        </member>
        <member name="M:BlazorFormManager.Components.AutoInputBase.RenderInputFile(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder,System.Int32,System.String)">
            <summary>
            Renders an input file to the supplied <see cref="T:Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder"/>.
            </summary>
            <param name="builder">A <see cref="T:Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder"/> that will receive the render output.</param>
            <param name="sequence">An integer that represents the position of the instruction in the source code.</param>
            <param name="additionalCssClass">The custom CSS class to add to the existing <see cref="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.CssClass"/>.</param>
            <returns>An integer that represents the next position of the instruction in the source code.</returns>
        </member>
        <member name="M:BlazorFormManager.Components.AutoInputBase.AddInputFileAttributes(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder,System.Int32,BlazorFormManager.ComponentModel.ViewAnnotations.InputFileAttribute)">
            <summary>
            Adds attributes to an input file from the custom attribute <see cref="T:BlazorFormManager.ComponentModel.ViewAnnotations.InputFileAttribute"/>.
            If the <see cref="P:BlazorFormManager.ComponentModel.ViewAnnotations.FileCapableAttributeBase.Method"/> value of the given <paramref name="fileAttr"/>
            is different from <see cref="F:BlazorFormManager.ComponentModel.ViewAnnotations.FileReaderMethod.None"/>, an attempt to register the current
            input with the <see cref="P:BlazorFormManager.Components.AutoInputBase.Form"/> is made.
            </summary>
            <param name="builder">A <see cref="T:Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder"/> that will receive the render output.</param>
            <param name="sequence">An integer that represents the position of the instruction in the source code.</param>
            <param name="fileAttr">The <see cref="T:BlazorFormManager.ComponentModel.ViewAnnotations.InputFileAttribute"/> to check.</param>
            <returns>An integer that represents the next position of the instruction in the source code.</returns>
        </member>
        <member name="M:BlazorFormManager.Components.AutoInputBase.RenderCustomInputFile(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder,System.Int32)">
            <summary>
            Renders to the supplied <see cref="T:Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder"/> an input of type file.
            </summary>
            <param name="builder">A <see cref="T:Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder"/> that will receive the render output.</param>
            <param name="sequence">An integer that represents the position of the instruction in the source code.</param>
            <returns>An integer that represents the next position of the instruction in the source code.</returns>
        </member>
        <member name="M:BlazorFormManager.Components.AutoInputBase.RenderCustomFormCheck(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder,System.Int32,System.Boolean,System.String,System.String,System.String)">
            <summary>
            Renders to the specified <see cref="T:Microsoft.AspNetCore.Components.Rendering.RenderBatchBuilder"/> a checkbox 
            or a radio input inside a &lt;div class="form-check"> wrapper element.
            </summary>
            <param name="builder">A <see cref="T:Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder"/> that will receive the render output.</param>
            <param name="sequence">An integer that represents the position of the instruction in the source code.</param>
            <param name="radio">true to render a radio input; otherwise, false to render a checkbox input.</param>
            <param name="label">The label text.</param>
            <param name="name">The name of the input radio.</param>
            <param name="value">The value of the radio input.</param>
            <returns>An integer that represents the next position of the instruction in the source code.</returns>
        </member>
        <member name="M:BlazorFormManager.Components.AutoInputBase.CheckDisabled(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder,System.Int32)">
            <summary>
            Determines at run-time the disabled state of the current <see cref="T:BlazorFormManager.Components.AutoInputBase"/>
            if the associated property was statically-marked as disabled with the property
            <see cref="P:BlazorFormManager.ComponentModel.ViewAnnotations.FormAttributeBase.Disabled"/> set to true.
            </summary>
            <param name="builder">A <see cref="T:Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder"/> that will receive the render output.</param>
            <param name="sequence">An integer that represents the position of the instruction in the source code.</param>
            <returns>An integer that represents the next position of the instruction in the source code.</returns>
        </member>
        <member name="M:BlazorFormManager.Components.AutoInputBase.TryParseValueFromString(System.String,System.Object@,System.String@)">
            <inheritdoc/>
        </member>
        <member name="M:BlazorFormManager.Components.AutoInputBase.SetCurrentValue(System.Object,System.String)">
            <summary>
            Sets the specified value to the <see cref="P:Microsoft.AspNetCore.Components.Forms.InputBase`1.CurrentValue"/> property
            and eventually invokes the <see cref="M:BlazorFormManager.Components.FormManagerBase.NotifyFieldChanged(BlazorFormManager.FormFieldChangedEventArgs)"/>
            method.
            </summary>
            <param name="value">The value that was changed.</param>
            <param name="propertyName">The name of the property that was changed.</param>
        </member>
        <member name="M:BlazorFormManager.Components.AutoInputBase.NotifyFieldChanged(System.Object,System.Boolean)">
            <summary>
            Notifies the parent <see cref="T:BlazorFormManager.Components.FormManagerBase"/> that a field's value has been changed.
            </summary>
            <param name="value">The new value.</param>
            <param name="isFile">true if it was file; otherwise, false.</param>
        </member>
        <member name="T:BlazorFormManager.Components.AutoValidationMessage">
            <summary>
            <inheritdoc/>
            This class provides a way to initialize differently the underlying <see cref="T:Microsoft.AspNetCore.Components.Forms.FieldIdentifier"/> class.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.AutoValidationMessage.Model">
            <summary>
            Specifies the model for which validation messages should be displayed.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.AutoValidationMessage.Property">
            <summary>
            Specifies the field for which validation messages should be displayed.
            </summary>
        </member>
        <member name="M:BlazorFormManager.Components.AutoValidationMessage.OnParametersSet">
            <inheritdoc />
        </member>
        <member name="M:BlazorFormManager.Components.AutoValidationMessage.InitFieldIdentifier(System.Object,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.AspNetCore.Components.Forms.FieldIdentifier"/> class using the specified parameters.
            </summary>
            <param name="model">The object that owns the field.</param>
            <param name="fieldName">The name of the editable field.</param>
        </member>
        <member name="T:BlazorFormManager.Components.FormManagerBase">
            <summary>
            Provides core functionalities for handling AJAX form submissions
            with zero or more files, and report back data upload progress.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.FormId">
            <summary>
            Gets or sets the form identifier as found in the rendered DOM.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.FormAction">
            <summary>
            Gets or sets the form 'action' attribute.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.FormMethod">
            <summary>
            Gets or sets the form 'method' attribute. Defaults to 'post'.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.LogLevel">
            <summary>
            Gets or sets the console log level.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.ChildContent">
            <summary>
            Gets or sets the child content to render within a &lt;form> tag.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.AdditionalAttributes">
            <summary>
            Gets or sets custom HTML attributes to render.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.OnValidSubmit">
            <summary>
            Delegate for the <see cref="P:Microsoft.AspNetCore.Components.Forms.EditForm.OnValidSubmit"/> event callback.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.OnInvalidSubmit">
            <summary>
            Delegate for the <see cref="P:Microsoft.AspNetCore.Components.Forms.EditForm.OnInvalidSubmit"/> event callback.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.OnSubmitDone">
            <summary>
            Event handler invoked when the form has been submitted, regardless of success or failure.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.OnUploadProgressChanged">
            <summary>
            Event handler invoked when a change in the data upload process occurs.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.OnAjaxUploadNotSupported">
            <summary>
            Event handler invoked when the user's navigator does not support AJAX upload with progress report.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.OnAfterScriptInitialized">
            <summary>
            Event handler invoked when the BlazorFormManager.js script has been successfully initialized.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.OnBeforeSubmit">
            <summary>
            Event handler invoked before the form is submitted. If the form has validation errors
            or if the action has different requirements than submitting the form. this is the
            opportunity to intercept and cancel the form submission by setting the 
            <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/> property value to true.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.OnModelRequested">
            <summary>
            Event handler invoked when the model to be submitted is requested.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.OnDragStart">
            <summary>
            Event handler invoked when a drag action starts.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.OnDrop">
            <summary>
            Event handler invoked when a drop action occurs.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.RequestHeaders">
            <summary>
            Gets or sets a dictionary of key-value pairs of request 
            headers to set before sending via XMLHttpRequest.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.DebugOptions">
            <summary>
            Gets or sets the debug options.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.SuccessMessage">
            <summary>
            Gets or sets the default message to display when the form was successfully submitted.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.ErrorMessage">
            <summary>
            Gets or sets the default message to display when the form was not successfully submitted.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.EnableProgressBar">
            <summary>
            Gets or sets a value that indicates whether the progress bar should be 
            displayed when an upload with files is in progress.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.RequireModel">
            <summary>
            Gets or sets a value that indicates whether specifying a non-null reference
            model is required when the <see cref="P:BlazorFormManager.Components.FormManagerBase.OnModelRequested"/> event is invoked. 
            If this parameter's value is true and no valid model is provided after the 
            <see cref="P:BlazorFormManager.Components.FormManagerBase.OnModelRequested"/> event has been invoked, the form submission 
            will be cancelled.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.OptionsGetter">
            <summary>
            Gets or sets a function callback used to retrieve a collection of 
            <see cref="T:BlazorFormManager.SelectOption"/> items to use for a 'select' element or
            an input of type 'radio'.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.DisabledGetter">
            <summary>
            Gets or sets a function callback used to dynamically retrieve the disabled state of an input.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.EnableChangeTracking">
            <summary>
            Indicates whether field changes should be tracked or not.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.ValidateOnFieldChanged">
            <summary>
            Indicates whether to force the <see cref="M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate"/> method to 
            execute when a field value is changed.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.OnFieldChanged">
            <summary>
            Gets or sets a callback delegate that is invoked when a field in the form changes.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.HasValidationErrors">
            <summary>
            Indicates whether the form currently has validation errors.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.XhrResult">
            <summary>
            Gets the XMLHttpRequest properties from the last request.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.IsDebug">
            <summary>
            Indicates whether the <see cref="P:BlazorFormManager.Components.FormManagerBase.LogLevel"/> property is <see cref="F:BlazorFormManager.Debugging.ConsoleLogLevel.Debug"/>.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.AjaxUploadNotSupported">
            <summary>
            Gets an object that holds event data related to unsupported AJAX upload with progress report.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.LocalStorage">
            <summary>
            Provides access to the browser's localStorage.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.SubmitResult">
            <summary>
            Gets or sets the form's submission result.
            </summary>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"><inheritdoc/></param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.GetModel">
            <summary>
            When implemented, returns the model to upload.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.NotifyFieldChanged(BlazorFormManager.FormFieldChangedEventArgs)">
            <summary>
            A descendant class may override this method to implement a 
            notification handler that listens for form field value changes.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.SubmitFormAsync">
            <summary>
            Makes sure that the form's 'onsubmit' DOM event handler
            is triggered should the traditional form submission fail.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.HandleValidSubmit(Microsoft.AspNetCore.Components.Forms.EditContext)">
            <summary>
            Performs internal tasks before eventually delegating the call to the <see cref="P:BlazorFormManager.Components.FormManagerBase.OnValidSubmit"/> handler.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.HandleInvalidSubmit(Microsoft.AspNetCore.Components.Forms.EditContext)">
            <summary>
            Performs internal tasks before eventually delegating the call to the <see cref="P:BlazorFormManager.Components.FormManagerBase.OnInvalidSubmit"/> handler.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.HandleSubmitDoneAsync(BlazorFormManager.FormManagerSubmitResult)">
            <summary>
            Handles displaying error or success messages after the submission completes.
            </summary>
            <param name="result">An object holding information about the form submission outcome.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.SetLogLevelAsync">
            <summary>
            Sets the log level in the BlazorFormManager.js script.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.SetLogLevelAsync(BlazorFormManager.Debugging.ConsoleLogLevel)">
            <summary>
            Sets the log level in the BlazorFormManager.js script using the specified <paramref name="level"/>.
            </summary>
            <param name="level">The log level to set.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.OnBeforeSubmitAsync">
            <summary>
            When the task completes one of the following things can happen:
            <para>
            The <see cref="P:BlazorFormManager.Components.FormManagerBase.OnBeforeSubmit"/> event callback has a delegate:
            Returns a boolean value determined by the property value of an instance of the
            <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/> class passed to the event callback delegate.
            </para>
            <para>
            The <see cref="P:BlazorFormManager.Components.FormManagerBase.OnBeforeSubmit"/> event callback has no delegate:
            Returns true if the form has validation errors, which should cancel the submission;
            otherwise, false is returned and the form can be safely submitted.
            </para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.OnGetModelAsync">
            <summary>
            When the task completes, returns the model to be submitted.
            If <see cref="P:BlazorFormManager.Components.FormManagerBase.OnModelRequested"/> has a delegate, the model
            is retrieved from <see cref="P:BlazorFormManager.ModelRequestedEventArgs.Model"/>
            after invocation of that delegate.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.OnBeforeSendAsync(BlazorFormManager.Debugging.FormManagerXhrResult)">
            <summary>
            Event raised before the form data is sent.
            </summary>
            <param name="xhr">
            An object that contains information about the XMLHttpRequest 
            object that is currently sending the request.
            </param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.OnSendFailedAsync(BlazorFormManager.Debugging.FormManagerXhrResult,System.String)">
            <summary>
            Invoked when in an error occurred during the form data submission.
            </summary>
            <param name="xhr">
            An object that contains information about the XMLHttpRequest 
            object that has sent the request.
            </param>
            <param name="message">An error message that might have been returned by the server.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.OnSendSucceededAsync(BlazorFormManager.Debugging.FormManagerXhrResult,System.String)">
            <summary>
            Invoked when the form data has been successfully uploaded.
            </summary>
            <param name="xhr">
            An object that contains information about the XMLHttpRequest 
            object that has sent the request.
            </param>
            <param name="message">A message that might have been returned by the server.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.OnUploadChangedAsync(BlazorFormManager.IO.UploadProgressChangedEventArgs)">
            <summary>
            Event fired each time a change occurs in the upload process.
            </summary>
            <param name="e">An object that holds event data related to the upload.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.OnAjaxUploadWithProgressNotSupportedAsync(BlazorFormManager.Debugging.AjaxUploadNotSupportedEventArgs)">
            <summary>
            Invoked when the user's browser does not support AJAX upload 
            with progress report. Return false to continue form submission 
            using full-page refresh; otherwise, true to cancel the form submission.
            </summary>
            <param name="e">The event data.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.RaiseAjaxUploadWithProgressNotSupportedAsync">
            <summary>
            For debugging purposes only. Invokes the 'raiseAjaxUploadWithProgressNotSupported'
            JavaScript function in BlazorFormManager.js file.
            </summary>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">
            BlazorFormManager.js script has not been initialized.
            </exception>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.RegisterFileDragDropTargetAsync(System.String,System.String,System.String)">
            <summary>
            Enables drag and drop support for files using the specified HTML element identifier as the drop target.
            </summary>
            <param name="dropTargetId">The identifier of the target HTML element that supports drag and drop.</param>
            <param name="propertyName">
            The name of the property used to retrieve the metadata of applicable custom attributes.
            This parameter is also used as the form field name into which files are stored and used when the form is submitted.
            </param>
            <param name="inputFieldId">
            The identifier of the input used to select a file on the disk. This value 
            is used to reset the input's value when a drop event occurs.
            </param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.RegisterFileDragDropTargetAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},BlazorFormManager.ComponentModel.ViewAnnotations.FileReaderMethod,System.Object)">
            <summary>
            Enables drag and drop support for files using the specified HTML element 
            identifier as the drop target.
            </summary>
            <param name="dropTargetId">The identifier of the target HTML element that 
            supports drag and drop.</param>
            <param name="inputName">The store name of dropped files which is also 
            used when the form is submitted.</param>
            <param name="inputFileId">
            The identifier of the input used to select a file on the disk. This value 
            is used to reset the input's value when a drop event occurs.
            </param>
            <param name="dropEffect">The desired drop effect. Default is 'copy'.</param>
            <param name="accept">A comma-separated list of allowed file name extensions.</param>
            <param name="acceptType">A value that restricts the type of files allowed.</param>
            <param name="multiple">
            Indicates whether dropping multiple files onto the target is allowed.
            If null, the value from the custom attribute attached to 
            <paramref name="inputName"/> will be used.
            </param>
            <param name="method">
            The method used to read files. If a file is an image then 
            <see cref="F:BlazorFormManager.ComponentModel.ViewAnnotations.FileReaderMethod.ReadAsDataURL"/> is used.
            </param>
            <param name="imagePreviewOptions">An object that specifies how image previews should be generated.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.UnregisterFileDragDropTargetAsync(System.String)">
            <summary>
            Disables drag and drop support for the specified HTML element identifier.
            </summary>
            <param name="dropTargetId">
            The identifier of the target HTML element that supports drag and drop.
            </param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.DeleteDragDropFileListAsync(System.String)">
            <summary>
            Removes from the drag and drop storage the files that have 
            been previously dropped onto the specified target element.
            </summary>
            <param name="dropTargetId">The identifier of the drop target element.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.DropInputFilesOnTargetAsync(System.String,System.String,System.String,BlazorFormManager.ComponentModel.ViewAnnotations.FileReaderMethod)">
            <summary>
            Reads the files from an input file identified by <paramref name="inputId"/>
            and stores them into the drag and drop settings for <paramref name="dropTargetId"/>.
            This effectively simulates a 'drop' DOM event for the target element.
            </summary>
            <param name="inputId">The identifier of an input file element.</param>
            <param name="dropTargetId">The identifier of a previously-registered drop target element.</param>
            <param name="propertyName">
            The name of the affected property. Is used to identify a concerned 
            property when the operation completes. This parameter is optional.
            </param>
            <param name="method">The FileReader method to use for reading files.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.OnDragStartAsync(BlazorFormManager.DOM.DomDragEventArgs)">
            <summary>
            Invoked when a drag action starts.
            </summary>
            <param name="e">An object that holds event data related to the drag action.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.OnDropAsync(BlazorFormManager.DOM.DomDragEventArgs)">
            <summary>
            Invoked when a drop action occurs.
            </summary>
            <param name="e">n object that holds event data related to the drop action.</param>
            <returns></returns>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.AbortRequested">
            <summary>
            A flag that allows aborting the current upload operation.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.UploadStatus">
            <summary>
            Indicates the current upload progress status message.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.ReadStatus">
            <summary>
            Indicates the current file reading progress status message.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.ReadFileListStatus">
            <summary>
            Indicates the current file list reading progress status message.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.Status">
            <summary>
            Gets the upload or file read status message.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.Stopwatch">
            <summary>
            Gets the stop watch used to measure a form submission duration.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.IsUploadingFiles">
            <summary>
            Determines whether an active upload containing one or more files is in progress.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.IsReadingFiles">
            <summary>
            Determines whether an active file read operation is in progress.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.IsReadingFileList">
            <summary>
            Determines whether an active file list  reading operation is in progress.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.IsRunning">
            <summary>
            Indicates that a form submission hasn't completed yet.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.IsLongRunning">
            <summary>
            Indicates whether a form submission is taking more 
            milliseconds than specified by <see cref="P:BlazorFormManager.Components.FormManagerBase.LongRunningDelay"/>.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.LongRunningDelay">
            <summary>
            The number of milliseconds beyond which to consider a form submission 
            to be long running. Defaults to 2000 milliseconds.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.CanTrackChanges">
            <summary>
            Returns true if <see cref="P:BlazorFormManager.Components.FormManagerBase.EnableChangeTracking"/> is true and 
            <see cref="P:BlazorFormManager.Components.FormManagerBase.OnFieldChanged"/> has a delegate; otherwise, false.
            </summary>
            <returns></returns>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.Progress">
            <summary>
            Gets the current progress' event data.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.ReadFileListProgress">
            <summary>
            Gets the current file list read progress event data.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.ReadProgress">
            <summary>
            Gets the current file read progress' event data.
            </summary>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.HandleUploadProgressChanged(BlazorFormManager.IO.UploadProgressChangedEventArgs)">
            <summary>
            Handles various upload-related event types.
            </summary>
            <param name="e">The event data holder.</param>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.OnReadFileList">
            <summary>
            Event handler invoked when a file list reading operation occurs.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.OnFileReaderProgressChanged">
            <summary>
            Event handler invoked when a change in the file read process occurs.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase.OnFileReaderResult">
            <summary>
            Event handler invoked when a JavaScript file reading operation is 
            completed and the result is available. Check the <see cref="P:BlazorFormManager.IO.FileReaderResult.Succeeded"/>
            flag to find out if the operation completed successfully.
            </summary>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.ReadFileAsync(System.String,BlazorFormManager.ComponentModel.ViewAnnotations.FileReaderMethod,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.String,System.String)">
            <summary>
            Reads files via JavaScript found in an input tag identified in the DOM by 
            <paramref name="inputId"/>.
            </summary>
            <param name="inputId">The identifier of the input file to read.</param>
            <param name="method">The FileReader method to use for reading files.</param>
            <param name="inputName">The name of the input file.</param>
            <param name="acceptExtensions">A comma-separated list of allowed file extensions.</param>
            <param name="acceptFileType">The type of file allowed to be picked.</param>
            <param name="multiple">Indicates whether reading multiple files is allowed.</param>
            <param name="autoGeneratePreview">Indicates whether image previews should be automatically generated.</param>
            <param name="generateFileInfo">Indicates whether to include file metadata (name, size, etc.).</param>
            <param name="imagePreviewId">
            The identifier of an HTML element (typically a &lt;img /> tag) that will display the image.
            </param>
            <param name="imagePreviewAttributeName">
            The name of the target element's attribute name that will receive the base64-encoded data URL.
            </param>
            <param name="imagePreviewCssClass">The CSS class name for an auto-generated image preview.</param>
            <param name="imagePreviewWrapper">the DOM query selector for the element that is wrapped around the auto-generated image.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.ReadFileAsync(BlazorFormManager.IO.FileReaderOptions)">
            <summary>
            Reads files via JavaScript found in an input tag identified in the DOM by 
            <see cref="P:BlazorFormManager.IO.FileReaderOptions.InputId"/>.
            </summary>
            <param name="options">An configuration object for reading files.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.ReadFileAsync(System.Object)">
            <summary>
            Reads files via JavaScript found in an input tag identified in the DOM
            by a property defined in the given <paramref name="options"/>.
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.HandleReadFileList(BlazorFormManager.IO.ReadFileListEventArgs)">
            <summary>
            Handle various event types related to a file list reading operation.
            When subscribed to the corresponding event, this handler is invoked before the method
            <see cref="M:BlazorFormManager.Components.FormManagerBase.HandleFileReaderProgressChanged(BlazorFormManager.IO.FileReaderProgressChangedEventArgs)"/>.
            It fires at least the <see cref="F:BlazorFormManager.IO.ReadFileEventType.Start"/> and <see cref="F:BlazorFormManager.IO.ReadFileEventType.End"/>
            events.
            </summary>
            <param name="e">The event data holder.</param>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.HandleFileReaderProgressChanged(BlazorFormManager.IO.FileReaderProgressChangedEventArgs)">
            <summary>
            Handles various event types related to a single file reading operation.
            </summary>
            <param name="e">The event data holder.</param>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.OnReadFileListAsync(BlazorFormManager.IO.ReadFileListEventArgs)">
            <summary>
            Event fired each time a file list reading operation occurs.
            </summary>
            <param name="e">An object that holds event data related to the read operation.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.OnFileReaderChangedAsync(BlazorFormManager.IO.FileReaderProgressChangedEventArgs)">
            <summary>
            Event fired each time a change occurs in the file read process.
            </summary>
            <param name="e">An object that holds event data related to the read operation.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.OnFileReaderResultAsync(BlazorFormManager.IO.FileReaderResult)">
            <summary>
            Invokes the <see cref="P:BlazorFormManager.Components.FormManagerBase.OnFileReaderResult"/> event callback.
            </summary>
            <param name="result">The result of a successful file reading operation.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.UpdateScriptOptionsAsync(System.Object)">
            <summary>
            Updates a subset or all options that were used during script initialization.
            </summary>
            <param name="options">
            An object containing properties and values used to update 
            their respective matching properties in the script's option.
            </param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.EnsureScriptInitialized">
            <summary>
            Throws <see cref="T:System.InvalidOperationException"/> if the BlazorFormManager.js
            script has not been initialized.
            </summary>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.StartStopWatch">
            <summary>
            Resets and/or starts the stop watch.
            </summary>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.Dispose">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase.Dispose(System.Boolean)">
            <summary>
            Releases used resources.
            </summary>
            <param name="disposing">
            true to release managed resources only;
            otherwise, false to release only unmanaged resources.
            </param>
        </member>
        <member name="T:BlazorFormManager.Components.FormManagerBase`1">
            <summary>
            Implements a strongly-typed <see cref="T:BlazorFormManager.Components.FormManagerBase"/> class.
            </summary>
            <typeparam name="TModel">The model type.</typeparam>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.Components.FormManagerBase"/> class.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase`1.EditContext">
            <summary>
            Gets or sets the form's current edit context.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase`1.HasChanges">
            <summary>
            Indicates whether the form has unsaved changes.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase`1.Model">
            <summary>
            Gets or sets the form model to upload.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.FormManagerBase`1.OnModelChanged">
            <summary>
            Gets or sets an event callback delegate used to notify about model changes.
            </summary>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase`1.NotifyModelChanged">
            <summary>
            Invokes the <see cref="P:BlazorFormManager.Components.FormManagerBase`1.OnModelChanged"/> if it has a delegate.
            </summary>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase`1.GetModel">
            <summary>
            Returns the <see cref="P:BlazorFormManager.Components.FormManagerBase`1.Model"/> property value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase`1.AttachFieldChangedListener">
            <summary>
            Attaches a handler to the <see cref="E:Microsoft.AspNetCore.Components.Forms.EditContext.OnFieldChanged"/> event.
            </summary>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase`1.DetachFieldChangedListener">
            <summary>
            Detaches a handler to the <see cref="E:Microsoft.AspNetCore.Components.Forms.EditContext.OnFieldChanged"/> event.
            </summary>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase`1.HandleSubmitDoneAsync(BlazorFormManager.FormManagerSubmitResult)">
            <inheritdoc/>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase`1.OnParametersSet">
            <inheritdoc/>
        </member>
        <member name="M:BlazorFormManager.Components.FormManagerBase`1.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:BlazorFormManager.Components.Debugging.FormDebugInfo.Model">
            <summary>
            Gets or sets the form manager XHR result.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.Debugging.FormDebugInfo.Options">
            <summary>
            Gets or sets the debug options.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.Debugging.FormDebugOptionsView.Parent">
            <summary>
            Gets or sets the parent container.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.Debugging.UnsupportedBrowserProperties.Model">
            <summary>
            Gets or sets a collection of key-value pairs of browser properties.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.Debugging.UnsupportedBrowserProperties.HideAjaxNotSupportedMessage">
            <summary>
            Indicates whether to hide the message 'AJAX Upload Not Supported!...'.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.DragDropArea.PropertyName">
            <summary>
            Gets or sets the name of the property that was decorated with a custom attribute
            of type <see cref="T:BlazorFormManager.ComponentModel.ViewAnnotations.InputFileAttribute"/> or descending from it.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.DragDropArea.WatermarkText">
            <summary>
            Gets or sets the text displayed when there are no selected files.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.DragDropArea.HasEventListeners">
            <summary>
            Indicates whether the current drag and drop area has event listeners.
            </summary>
        </member>
        <member name="M:BlazorFormManager.Components.DragDropArea.DeleteFileListAsync">
            <summary>
            Deletes the files that have been previously dropped onto the current area.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Components.DragDropArea.AddEventListenersAsync">
            <summary>
            Enables drag and drop support for the current area.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Components.DragDropArea.RemoveEventListenersAsync">
            <summary>
            Disables drag and drop support for the current area.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Components.DragDropArea.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="P:BlazorFormManager.Components.FormSubmitResultView.Result">
            <summary>
            Gets or sets the form submission result.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.Html5ProgressBar.Progress">
            <summary>
            Gets or sets an object that contains information about the current progress.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.Html5ProgressBar.StatusMessage">
            <summary>
            Gets or sets the progress status message.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.Html5ProgressBar.CancelButtonText">
            <summary>
            Gets or sets the text of the cancel button.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.Html5ProgressBar.HideCancelButton">
            <summary>
            Indicates whether to hide the cancel button.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.Html5ProgressBar.ElapsedMilliseconds">
             <summary>
            Gets or sets the total amount of milliseconds elapsed.
             </summary>
        </member>
        <member name="P:BlazorFormManager.Components.Html5ProgressBar.HideElapsedMilliseconds">
            <summary>
            Indicates whether to hide the elapsed milliseconds value.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.Html5ProgressBar.OnCancelRequested">
            <summary>
            Gets or sets the event callback used to handle a cancellation request.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.IFrameSourceDocument.Html">
            <summary>
            Gets or sets the &lt;iframe>'s srcdoc attribute value.
            If both properties <see cref="P:BlazorFormManager.Components.IFrameSourceDocument.Html"/> and <see cref="P:BlazorFormManager.Components.IFrameSourceDocument.Src"/>
            are set, this one takes precedence over the latter.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.IFrameSourceDocument.Src">
            <summary>
            Gets or sets the &lt;iframe>'s src attribute value.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.ImagePreview.PropertyName">
            <summary>
            The name of the associated property for which to generate a preview.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.ImagePreview.Visible">
            <summary>
            Ensures the &lt;img /&gt; stays (hidden or not) in the 
            DOM tree instead of being removed between two render cycles.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.ImagePreview.MaxHeight">
            <summary>
            The maximum height in pixels of the image. If null, 100% will apply.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.UploadProgressBar.Progress">
            <summary>
            Gets or sets an object that contains information about the current form submission progress.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.UploadProgressBar.UploadStatusMessage">
            <summary>
            Gets or sets the upload status message.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.UploadProgressBar.CancelButtonText">
            <summary>
            Gets or sets the text of the cancel button.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Components.UploadProgressBar.OnCancelRequested">
            <summary>
            Gets or sets the event callback used to handle a cancellation request.
            </summary>
        </member>
        <member name="T:BlazorFormManager.Debugging.AjaxUploadNotSupportedEventArgs">
            <summary>
            Provides event data when a browser does not support AJAX upload with progress report.
            </summary>
        </member>
        <member name="M:BlazorFormManager.Debugging.AjaxUploadNotSupportedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.Debugging.AjaxUploadNotSupportedEventArgs"/> class.
            </summary>
        </member>
        <member name="M:BlazorFormManager.Debugging.AjaxUploadNotSupportedEventArgs.#ctor(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="cancel"><inheritdoc/></param>
        </member>
        <member name="P:BlazorFormManager.Debugging.AjaxUploadNotSupportedEventArgs.ExtraProperties">
            <summary>
            Gets or sets supplementary properties received from an XMLHttpRequest.
            </summary>
        </member>
        <member name="T:BlazorFormManager.Debugging.ConsoleLogLevel">
            <summary>
            JavaScript console log level enumerations.
            </summary>
        </member>
        <member name="F:BlazorFormManager.Debugging.ConsoleLogLevel.None">
            <summary>
            Log nothing.
            </summary>
        </member>
        <member name="F:BlazorFormManager.Debugging.ConsoleLogLevel.Information">
            <summary>
            Log information only.
            </summary>
        </member>
        <member name="F:BlazorFormManager.Debugging.ConsoleLogLevel.Warning">
            <summary>
            Log warnings only.
            </summary>
        </member>
        <member name="F:BlazorFormManager.Debugging.ConsoleLogLevel.Error">
            <summary>
            Log errors only.
            </summary>
        </member>
        <member name="F:BlazorFormManager.Debugging.ConsoleLogLevel.Debug">
            <summary>
            Log everything.
            </summary>
        </member>
        <member name="T:BlazorFormManager.Debugging.FormManagerXhrDebug">
            <summary>
            Specifies options on how to handle debug information related to JavaScript's XMLHttpRequest object.
            </summary>
        </member>
        <member name="M:BlazorFormManager.Debugging.FormManagerXhrDebug.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.Debugging.FormManagerXhrDebug"/> class.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Debugging.FormManagerXhrDebug.HtmlDocViewEnabled">
            <summary>
            Indicates, when applicable, whether to interpret HTTP responses 
            with the <see cref="T:Microsoft.AspNetCore.Components.MarkupString"/> structure or not. This could
            be potentially dangerous if the server is not trustworthy.
            </summary>
        </member>
        <member name="T:BlazorFormManager.Debugging.FormManagerXhrResult">
            <summary>
            Provides debugging information and configuration values for 
            HTTP requests done with JavaScript's XMLHttpRequest object.
            </summary>
        </member>
        <member name="M:BlazorFormManager.Debugging.FormManagerXhrResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.Debugging.FormManagerXhrResult"/> class.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Debugging.FormManagerXhrResult.Cancel">
            <summary>
            Indicates whether an event caller should quit further processing.
            This property is not part of the XMLHttpRequest object.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Debugging.FormManagerXhrResult.RequestHeaders">
            <summary>
            Gets or sets the request headers.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Debugging.FormManagerXhrResult.Response">
            <summary>
            Gets or sets the response's body content as an ArrayBuffer, Blob, 
            Document, JavaScript Object, or DOMString, depending on the value 
            of the request's responseType property.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Debugging.FormManagerXhrResult.ResponseHeaders">
            <summary>
            Gets or sets all the response headers, separated by CRLF, 
            as a string, or returns null if no response has been received. 
            If a network error happened, an empty string is returned.
            <para>Raw header string example:</para>
            <para>
            date: Fri, 24 Jul 2020 21:04:30 GMT\r\n
            content-encoding: gzip\r\n
            x-content-type-options: nosniff\r\n
            server: meinheld/0.6.1\r\n
            x-frame-options: DENY\r\n
            content-type: text/html; charset=utf-8\r\n
            connection: keep-alive\r\n
            strict-transport-security: max-age=63072000\r\n
            vary: Cookie, Accept-Encoding\r\n
            content-length: 6502\r\n
            x-xss-protection: 1; mode=block\r\n
            </para>
            </summary>
        </member>
        <member name="P:BlazorFormManager.Debugging.FormManagerXhrResult.ResponseText">
            <summary>
            Gets or set the text received from a server following a request being sent.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Debugging.FormManagerXhrResult.ResponseType">
            <summary>
            Gets or sets an enumerated string value specifying the type of data 
            contained in the response. It also lets the author change the response 
            type. If an empty string is set as the value of responseType, the 
            default value of text is used. Supported values are: arraybuffer, blob,
            document, json, text, ms-stream
            </summary>
        </member>
        <member name="P:BlazorFormManager.Debugging.FormManagerXhrResult.ResponseUrl">
            <summary>
            The read-only XMLHttpRequest.responseURL property returns the serialized 
            URL of the response or the empty string if the URL is null. If the URL 
            is returned, any URL fragment present in the URL will be stripped away. 
            The value of responseURL will be the final URL obtained after any redirects.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Debugging.FormManagerXhrResult.ResponseXML">
            <summary>
            The XMLHttpRequest.responseXML read-only property returns a Document containing 
            the HTML or XML retrieved by the request; or null if the request was unsuccessful, 
            has not yet been sent, or if the data can't be parsed as XML or HTML.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Debugging.FormManagerXhrResult.Status">
            <summary>
            The read-only XMLHttpRequest.status property returns the 
            numerical HTTP status code of the XMLHttpRequest's response.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Debugging.FormManagerXhrResult.StatusText">
            <summary>
            The read-only XMLHttpRequest.statusText property returns a DOMString containing 
            the response's status message as returned by the HTTP server. Unlike 
            XMLHTTPRequest.status which indicates a numerical status code, this property 
            contains the text of the response status, such as "OK" or "Not Found".
            If the request's readyState is in UNSENT or OPENED state, the value of statusText 
            will be an empty string.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Debugging.FormManagerXhrResult.WithCredentials">
            <summary>
            The XMLHttpRequest.withCredentials property is a Boolean that indicates 
            whether or not cross-site Access-Control requests should be made using 
            credentials such as cookies, authorization headers or TLS client certificates. 
            Setting withCredentials has no effect on same-site requests.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Debugging.FormManagerXhrResult.ExtraProperties">
            <summary>
            Gets or sets supplementary properties received from an XMLHttpRequest object.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Debugging.FormManagerXhrResult.IsSuccessStatusCode">
            <summary>
            Determines whether the <see cref="P:BlazorFormManager.Debugging.FormManagerXhrResult.Status"/> code indicates 
            success (integer between 200 and 299 inclusive).
            </summary>
        </member>
        <member name="P:BlazorFormManager.Debugging.FormManagerXhrResult.Headers">
            <summary>
            Gets a read-only dictionary of all the response headers.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Debugging.FormManagerXhrResult.IsHtmlResponse">
            <summary>
            Determines whether the 'content-type' response header 
            value contains the word 'html' (case-insensitive lookup).
            </summary>
        </member>
        <member name="P:BlazorFormManager.Debugging.FormManagerXhrResult.IsJsonResponse">
            <summary>
            Determines whether the 'content-type' response header 
            value contains the word 'json' (case-insensitive lookup).
            </summary>
        </member>
        <member name="M:BlazorFormManager.Debugging.FormManagerXhrResult.ResponseContentTypeContains(System.String)">
            <summary>
            Determines whether the 'content-type' response header 
            contains the specified value (case-insensitive lookup).
            </summary>
            <param name="value">The header value to lookup.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Debugging.FormManagerXhrResult.ResponseContentTypeContains(System.String,System.StringComparison)">
            <summary>
            Determines whether the 'content-type' response header contains
            the specified value using the specified string comparison.
            </summary>
            <param name="value">The header value to lookup.</param>
            <param name="comparisonType">
            One of the enumeration values that specifies the rules to use in the comparison.
            </param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Debugging.FormManagerXhrResult.ParseResponseType">
            <summary>
            Returns the <see cref="P:BlazorFormManager.Debugging.FormManagerXhrResult.ResponseType"/> property as a well-known enumeration value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.Debugging.FormManagerXhrResult.GetAllResponseHeaders">
            <summary>
            Parse the <see cref="P:BlazorFormManager.Debugging.FormManagerXhrResult.ResponseHeaders"/> property into 
            a collection of key-value pairs of string elements.
            </summary>
            <returns></returns>
        </member>
        <member name="T:BlazorFormManager.Debugging.XMLHttpRequestResponseType">
            <summary>
            Provides enumeration values for HTTP response types 
            received through JavaScript's XMLHttpRequest object.
            </summary>
        </member>
        <member name="F:BlazorFormManager.Debugging.XMLHttpRequestResponseType.Text">
            <summary>
            The response is a text in a DOMString object.
            </summary>
        </member>
        <member name="F:BlazorFormManager.Debugging.XMLHttpRequestResponseType.ArrayBuffer">
            <summary>
            The response is a JavaScript ArrayBuffer containing binary data.
            </summary>
        </member>
        <member name="F:BlazorFormManager.Debugging.XMLHttpRequestResponseType.Blob">
            <summary>
            The response is a Blob object containing the binary data.
            </summary>
        </member>
        <member name="F:BlazorFormManager.Debugging.XMLHttpRequestResponseType.Document">
            <summary>
            The response is an HTML Document or XML XMLDocument, as 
            appropriate based on the MIME type of the received data.
            </summary>
        </member>
        <member name="F:BlazorFormManager.Debugging.XMLHttpRequestResponseType.Json">
            <summary>
            The response is a JavaScript object created by 
            parsing the contents of received data as JSON.
            </summary>
        </member>
        <member name="F:BlazorFormManager.Debugging.XMLHttpRequestResponseType.MsStream">
            <summary>
            The response is part of a streaming download; this response 
            type is only allowed for download requests, and is only 
            supported by Internet Explorer.
            </summary>
        </member>
        <member name="T:BlazorFormManager.DOM.DomDataTransfer">
            <summary>
            Represents an object used to hold the data that is being dragged during a drag
            and drop operation. This is a more strongly-typed version of the <see cref="T:Microsoft.AspNetCore.Components.Web.DataTransfer"/>
            class. It may hold one or more <see cref="T:Microsoft.AspNetCore.Components.Web.DataTransferItem"/>, each of one or more
            data types. For more information about drag and drop, see HTML Drag and Drop API.
            </summary>
        </member>
        <member name="M:BlazorFormManager.DOM.DomDataTransfer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.DOM.DomDataTransfer"/> class.
            </summary>
        </member>
        <member name="P:BlazorFormManager.DOM.DomDataTransfer.EffectAllowed">
            <summary>
            Gets or sets the kinds of operations that are to be allowed.
            </summary>
        </member>
        <member name="P:BlazorFormManager.DOM.DomDataTransfer.DropEffect">
            <summary>
            Gets or sets the kind of operation that is currently selected. If the kind of
            operation isn't one of those that is allowed by the effectAllowed attribute,
            then the operation will fail.
            </summary>
        </member>
        <member name="P:BlazorFormManager.DOM.DomDataTransfer.Files">
            <summary>
            Contains a list of all the local files available on the data transfer. If the
            drag operation doesn't involve dragging files, this property is an empty list.
            </summary>
        </member>
        <member name="P:BlazorFormManager.DOM.DomDataTransfer.Items">
            <summary>
            Gives a <see cref="T:Microsoft.AspNetCore.Components.Web.DataTransferItem"/> array which is a list of all of the drag data.
            </summary>
        </member>
        <member name="P:BlazorFormManager.DOM.DomDataTransfer.Types">
            <summary>
            An array of <see cref="T:System.String"/> giving the formats that were set in the dragstart event.
            </summary>
        </member>
        <member name="T:BlazorFormManager.DOM.DomDragEventArgs">
            <summary>
            A DOM event that represents a drag and drop interaction. The user initiates a
            drag by placing a pointer device (such as a mouse) on the touch surface and then
            dragging the pointer to a new location (such as another DOM element).
            </summary>
        </member>
        <member name="M:BlazorFormManager.DOM.DomDragEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.DOM.DomDragEventArgs"/> class.
            </summary>
        </member>
        <member name="P:BlazorFormManager.DOM.DomDragEventArgs.DataTransfer">
            <summary>
            The data that underlies a drag-and-drop operation, known as the drag data store.
            </summary>
        </member>
        <member name="P:BlazorFormManager.DOM.DomDragEventArgs.Response">
            <summary>
            Gets or sets the response to a drag and drop operation.
            </summary>
        </member>
        <member name="T:BlazorFormManager.DOM.DomMouseEventArgs">
            <summary>
            Provides information about a mouse-related event.
            </summary>
        </member>
        <member name="M:BlazorFormManager.DOM.DomMouseEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.DOM.DomMouseEventArgs"/> class.
            </summary>
        </member>
        <member name="P:BlazorFormManager.DOM.DomMouseEventArgs.MovementX">
            <summary>
            Indicates the X-movement coordinate.
            </summary>
        </member>
        <member name="P:BlazorFormManager.DOM.DomMouseEventArgs.MovementY">
            <summary>
            Indicates the Y-movement coordinate.
            </summary>
        </member>
        <member name="P:BlazorFormManager.DOM.DomMouseEventArgs.OffsetX">
            <summary>
            Indicates the X-offset coordinate.
            </summary>
        </member>
        <member name="P:BlazorFormManager.DOM.DomMouseEventArgs.OffsetY">
            <summary>
            Indicates the Y-offset coordinate.
            </summary>
        </member>
        <member name="P:BlazorFormManager.DOM.DomMouseEventArgs.PageX">
            <summary>
            The X coordinate of the mouse pointer in page (DOM content) coordinates.
            </summary>
        </member>
        <member name="P:BlazorFormManager.DOM.DomMouseEventArgs.PageY">
            <summary>
            The Y coordinate of the mouse pointer in page (DOM content) coordinates.
            </summary>
        </member>
        <member name="P:BlazorFormManager.DOM.DomMouseEventArgs.Which">
            <summary>
            Provides additional info about a key press.
            </summary>
        </member>
        <member name="P:BlazorFormManager.DOM.DomMouseEventArgs.X">
            <summary>
            The X coordinate of the mouse pointer coordinates.
            </summary>
        </member>
        <member name="P:BlazorFormManager.DOM.DomMouseEventArgs.Y">
            <summary>
            The Y coordinate of the mouse pointer coordinates.
            </summary>
        </member>
        <member name="T:BlazorFormManager.DOM.DragEventResponse">
            <summary>
            Represents an object used to provide data as a response to a 'drag' DOM event.
            </summary>
        </member>
        <member name="M:BlazorFormManager.DOM.DragEventResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.DOM.DragEventResponse"/> class.
            </summary>
        </member>
        <member name="M:BlazorFormManager.DOM.DragEventResponse.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.DOM.DragEventResponse"/> class
            with the <see cref="P:BlazorFormManager.DOM.DragEventResponse.Cancel"/> property set to the given value.
            </summary>
            <param name="cancel">true to cancel the event; otherwise, false.</param>
        </member>
        <member name="P:BlazorFormManager.DOM.DragEventResponse.EffectAllowed">
            <summary>
            Gets or sets the kinds of operations that are to be allowed.
            </summary>
        </member>
        <member name="P:BlazorFormManager.DOM.DragEventResponse.Data">
            <summary>
            Gets or sets the drag event data.
            </summary>
        </member>
        <member name="P:BlazorFormManager.DOM.DragEventResponse.DataFormat">
            <summary>
            Gets or sets the drag event data format.
            </summary>
        </member>
        <member name="P:BlazorFormManager.DOM.DragEventResponse.Cancel">
            <summary>
            true to cancel the event; otherwise, false.
            </summary>
        </member>
        <member name="P:BlazorFormManager.DOM.DragEventResponse.AcceptedFiles">
            <summary>
            Gets or sets an array of files accepted on a drop event.
            </summary>
        </member>
        <member name="P:BlazorFormManager.DOM.DragEventResponse.StoreOnly">
            <summary>
            Indicates whether to store dropped files without reading their content.
            </summary>
        </member>
        <member name="P:BlazorFormManager.DOM.DragEventResponse.MaxFileCount">
            <summary>
            Gets or sets the maximum number of files that is allowed to be dropped.
            </summary>
        </member>
        <member name="P:BlazorFormManager.DOM.DragEventResponse.MaxTotalSize">
            <summary>
            Gets or sets the maximum size (in megabytes) of all files allowed to be dropped.
            </summary>
        </member>
        <member name="P:BlazorFormManager.DOM.DragEventResponse.ImagePreviewOptions">
            <summary>
            Gets or sets the options for dynamically generating image previews.
            </summary>
        </member>
        <member name="T:BlazorFormManager.DOM.DropEffect">
            <summary>
            Provides enumerated values for the kinds of operations that are to be allowed.
            </summary>
        </member>
        <member name="F:BlazorFormManager.DOM.DropEffect.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BlazorFormManager.DOM.DropEffect.Copy">
            <summary>
            Copy.
            </summary>
        </member>
        <member name="F:BlazorFormManager.DOM.DropEffect.Link">
            <summary>
            Link.
            </summary>
        </member>
        <member name="F:BlazorFormManager.DOM.DropEffect.Move">
            <summary>
            Move.
            </summary>
        </member>
        <member name="T:BlazorFormManager.DOM.EffectAllowed">
            <summary>
            Provides enumerated values for the kinds of operations that are to be allowed.
            </summary>
        </member>
        <member name="F:BlazorFormManager.DOM.EffectAllowed.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BlazorFormManager.DOM.EffectAllowed.Copy">
            <summary>
            Copy.
            </summary>
        </member>
        <member name="F:BlazorFormManager.DOM.EffectAllowed.CopyLink">
            <summary>
            CopyLink.
            </summary>
        </member>
        <member name="F:BlazorFormManager.DOM.EffectAllowed.CopyMove">
            <summary>
            CopyMove.
            </summary>
        </member>
        <member name="F:BlazorFormManager.DOM.EffectAllowed.Link">
            <summary>
            Link.
            </summary>
        </member>
        <member name="F:BlazorFormManager.DOM.EffectAllowed.LinkMove">
            <summary>
            LinkMove.
            </summary>
        </member>
        <member name="F:BlazorFormManager.DOM.EffectAllowed.Move">
            <summary>
            Move.
            </summary>
        </member>
        <member name="F:BlazorFormManager.DOM.EffectAllowed.All">
            <summary>
            All.
            </summary>
        </member>
        <member name="F:BlazorFormManager.DOM.EffectAllowed.Uninitialized">
            <summary>
            Uninitialized.
            </summary>
        </member>
        <member name="T:BlazorFormManager.Drawing.ImageSize">
            <summary>
            Stores an ordered pair of integers, which specify a <see cref="P:BlazorFormManager.Drawing.ImageSize.Width"/> and <see cref="P:BlazorFormManager.Drawing.ImageSize.Height"/>.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Drawing.ImageSize.Width">
            <summary>
            Gets or sets the horizontal component of this <see cref="T:BlazorFormManager.Drawing.ImageSize"/> class, typically measured in pixels.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Drawing.ImageSize.Height">
            <summary>
            Gets or sets the vertical component of this <see cref="T:BlazorFormManager.Drawing.ImageSize"/> class, typically measured in pixels.
            </summary>
        </member>
        <member name="P:BlazorFormManager.Drawing.ImageSize.IsEmpty">
            <summary>
            Tests whether this <see cref="T:BlazorFormManager.Drawing.ImageSize"/> class has width and height of 0.
            </summary>
        </member>
        <member name="M:BlazorFormManager.Drawing.ImageSize.ToString">
            <summary>
            Returns the string representation of this <see cref="T:BlazorFormManager.Drawing.ImageSize"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="T:BlazorFormManager.FormFieldChangedEventArgs">
            <summary>
            Encapsulates data related to an event raised when a form field changes.
            </summary>
        </member>
        <member name="M:BlazorFormManager.FormFieldChangedEventArgs.#ctor(System.Boolean,Microsoft.AspNetCore.Components.Forms.FieldIdentifier)">
            <summary>
            Initializes a new instance of <see cref="T:BlazorFormManager.FormFieldChangedEventArgs"/>
            </summary>
            <param name="isValid">true if the form is currently valid; otherwise, false.</param>
            <param name="fieldIdentifier">The field whose value has changed.</param>
        </member>
        <member name="M:BlazorFormManager.FormFieldChangedEventArgs.#ctor(System.Object,Microsoft.AspNetCore.Components.Forms.FieldIdentifier,System.Boolean,System.String,BlazorFormManager.ComponentModel.ViewAnnotations.InputFileAttribute)">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.FormFieldChangedEventArgs"/>
            class using the specified parameters.
            </summary>
            <param name="value">The value of the field that changed.</param>
            <param name="fieldIdentifier">The field whose value has changed.</param>
            <param name="isFile">Indicates whether the field that triggered the change is an input file.</param>
            <param name="elementId">The identifier of the element that triggered the change.</param>
            <param name="fileAttribute">A copy of the custom attribute attached to the current field, if any.</param>
        </member>
        <member name="P:BlazorFormManager.FormFieldChangedEventArgs.IsValid">
            <summary>
            Indicates whether the current underlying <see cref="T:Microsoft.AspNetCore.Components.Forms.EditContext"/> is valid.
            </summary>
        </member>
        <member name="P:BlazorFormManager.FormFieldChangedEventArgs.Field">
            <summary>
            Identifies the field whose value has changed.
            </summary>
        </member>
        <member name="P:BlazorFormManager.FormFieldChangedEventArgs.FieldId">
            <summary>
            Gets the identifier of the field that triggered the change.
            </summary>
        </member>
        <member name="P:BlazorFormManager.FormFieldChangedEventArgs.Value">
            <summary>
            Gets the value of the field that changed.
            </summary>
        </member>
        <member name="P:BlazorFormManager.FormFieldChangedEventArgs.FileAttribute">
            <summary>
            Gets a copy of the custom attribute attached to the current field, if any.
            </summary>
        </member>
        <member name="P:BlazorFormManager.FormFieldChangedEventArgs.IsFile">
            <summary>
            Indicates whether the field that triggered the change is an input file.
            </summary>
        </member>
        <member name="P:BlazorFormManager.FormFieldChangedEventArgs.HasFile">
            <summary>
            Indicates whether this instance has a valid file.
            </summary>
        </member>
        <member name="M:BlazorFormManager.FormFieldChangedEventArgs.IsEmptyFile(System.String)">
            <summary>
            Checks if the current instance refers to a non-empty file matching the specified field name.
            </summary>
            <param name="fieldName">The name of the field to compare against.</param>
            <returns></returns>
        </member>
        <member name="T:BlazorFormManager.FormManagerBaseJSInvokable">
            <summary>
            Represents a wrapper around an instance of the <see cref="T:BlazorFormManager.Components.FormManagerBase"/>
            class to enable JavaScript interoperability.
            </summary>
        </member>
        <member name="T:BlazorFormManager.FormManagerSubmitResult">
            <summary>
            Encapsulates information about the outcome of a form submission.
            </summary>
        </member>
        <member name="P:BlazorFormManager.FormManagerSubmitResult.XHR">
            <summary>
            Gets information about the XMLHttpRequest object that was involved in the request.
            </summary>
        </member>
        <member name="P:BlazorFormManager.FormManagerSubmitResult.Succeeded">
            <summary>
            Indicates whether the form submission was successful or not.
            </summary>
        </member>
        <member name="P:BlazorFormManager.FormManagerSubmitResult.UploadContainedFiles">
            <summary>
            Indicates whether the upload contained one or more files.
            </summary>
        </member>
        <member name="P:BlazorFormManager.FormManagerSubmitResult.Message">
            <summary>
            Gets or sets the error or success message.
            </summary>
        </member>
        <member name="M:BlazorFormManager.FormManagerSubmitResult.Success(BlazorFormManager.Debugging.FormManagerXhrResult,System.String,System.Boolean)">
            <summary>
            Creates and initializes a new instance of the <see cref="T:BlazorFormManager.FormManagerSubmitResult"/>
            class for a successful form submission.
            </summary>
            <param name="xhr">Information about the XMLHttpRequest object that was involved in the request.</param>
            <param name="message">The success message.</param>
            <param name="uploadContainedFiles">Indicates whether the upload contained one or more files.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.FormManagerSubmitResult.Success(BlazorFormManager.FormManagerSubmitResult,System.String)">
            <summary>
            Creates and initializes a new instance the <see cref="T:BlazorFormManager.FormManagerSubmitResult"/>
            class using the specified <paramref name="result"/> and <paramref name="message"/>.
            </summary>
            <param name="result">The result to derive from.</param>
            <param name="message">The success message.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.FormManagerSubmitResult.Failed(BlazorFormManager.Debugging.FormManagerXhrResult,System.String,System.Boolean)">
            <summary>
            Creates and initializes a new instance of the <see cref="T:BlazorFormManager.FormManagerSubmitResult"/>
            class for a non successful form submission.
            </summary>
            <param name="xhr">Information about the XMLHttpRequest object that was involved in the request.</param>
            <param name="message">The error message.</param>
            <param name="uploadContainedFiles">Indicates whether the upload contained one or more files.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.FormManagerSubmitResult.Failed(BlazorFormManager.FormManagerSubmitResult,System.String)">
            <summary>
            Creates and initializes a new instance the <see cref="T:BlazorFormManager.FormManagerSubmitResult"/>
            class using the specified <paramref name="result"/> and <paramref name="message"/>.
            </summary>
            <param name="result">The result to derive from.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="T:BlazorFormManager.IO.FileReaderInvokeResult">
            <summary>
            Represents the result of a JavaScript file reading operation.
            </summary>
        </member>
        <member name="M:BlazorFormManager.IO.FileReaderInvokeResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.IO.FileReaderInvokeResult"/> class.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.FileReaderInvokeResult.Succeeded">
            <summary>
            Indicates whether the registration was done successfully.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.FileReaderInvokeResult.Error">
            <summary>
            Gets or sets the error that might have occurred during the operation.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.FileReaderInvokeResult.Code">
            <summary>
            Gets or sets the error code.
            </summary>
        </member>
        <member name="T:BlazorFormManager.IO.FileReaderOptions">
            <summary>
            Represents options for reading a file in JavaScript.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.FileReaderOptions.InputId">
            <summary>
            Gets or sets the input file identifier from which to read.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.FileReaderOptions.InputName">
            <summary>
            Gets or sets the input file name.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.FileReaderOptions.Method">
            <summary>
            Gets or sets the method to read the file.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.FileReaderOptions.Accept">
            <summary>
            Gets or sets the acceptable file name extensions (e.g. .jpg, .png, .pdf, .*).
            To accept any file, specify '.*' (without the single quotes).
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.FileReaderOptions.AcceptType">
            <summary>
            Gets or sets the type of file allowed to be picked.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.FileReaderOptions.Multiple">
            <summary>
            Indicates whether reading multiple files is allowed.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.FileReaderOptions.ImagePreviewOptions">
            <summary>
            Gets or sets the preview options for image file of types.
            </summary>
        </member>
        <member name="T:BlazorFormManager.IO.FileReaderProgressChangedEventArgs">
            <summary>
            Provides data for cancelable file read/upload event.
            </summary>
        </member>
        <member name="M:BlazorFormManager.IO.FileReaderProgressChangedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.IO.UploadProgressChangedEventArgs"/> class.
            </summary>
        </member>
        <member name="M:BlazorFormManager.IO.FileReaderProgressChangedEventArgs.#ctor(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:BlazorFormManager.IO.FileReaderProgressChangedEventArgs.BytesRead">
            <summary>
            Gets or sets the number of bytes read so far.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.FileReaderProgressChangedEventArgs.TotalBytesToRead">
            <summary>
            Gets or sets the total number of bytes to read.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.FileReaderProgressChangedEventArgs.File">
            <summary>
            Gets or sets information about an input file currently being read.
            </summary>
        </member>
        <member name="T:BlazorFormManager.IO.FileReaderResult">
            <summary>
            Represents the result of a file reading operation.
            </summary>
        </member>
        <member name="M:BlazorFormManager.IO.FileReaderResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.IO.FileReaderResult"/> class.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.FileReaderResult.Succeeded">
            <summary>
            Gets or sets a value that indicates whether a file reading operation was
            successful.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.FileReaderResult.InputId">
            <summary>
            Gets or sets the input file identifier.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.FileReaderResult.InputName">
            <summary>
            Gets or sets the input file name.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.FileReaderResult.Content">
            <summary>
            Gets or sets a file read operation result.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.FileReaderResult.ContentArray">
            <summary>
            Gets or sets a file read operation result as a buffer array.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.FileReaderResult.Method">
            <summary>
            Gets or sets the method used to read a file.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.FileReaderResult.Error">
            <summary>
            Gets or sets the error that occurred during a file reading operation.
            </summary>
        </member>
        <member name="M:BlazorFormManager.IO.FileReaderResult.ContentArrayAsByteArray">
            <summary>
            Casts the <see cref="P:BlazorFormManager.IO.FileReaderResult.ContentArray"/> to a-dimensional array of <see cref="T:System.Byte"/> elements.
            </summary>
            <returns></returns>
        </member>
        <member name="P:BlazorFormManager.IO.FileReaderResult.CompletedInScript">
            <summary>
            Indicates whether the UI interaction was done in JavaScript.
            </summary>
        </member>
        <member name="T:BlazorFormManager.IO.ImagePreviewOptions">
            <summary>
            Encapsulates data used for generating an image preview from a file.
            </summary>
        </member>
        <member name="M:BlazorFormManager.IO.ImagePreviewOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.IO.ImagePreviewOptions"/> class.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.ImagePreviewOptions.AutoGenerate">
            <summary>
            Indicates whether image previews should be automatically generated. The default value is true.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.ImagePreviewOptions.GenerateFileInfo">
            <summary>
            Indicates whether to include file metadata (name, size, etc.). The default value is true.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.ImagePreviewOptions.TagName">
            <summary>
            Gets or sets the name of the HTML element (typically a &lt;img /> tag)
            that will hold the image. The default value is "img".
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.ImagePreviewOptions.TagClass">
            <summary>
            Gets or sets the CSS class name for an auto-generated image.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.ImagePreviewOptions.TagId">
            <summary>
            Gets or sets the identifier of an HTML element (typically a &lt;img /> tag)
            that will display the image.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.ImagePreviewOptions.AttributeName">
            <summary>
            Gets or sets the name of the target element's attribute name that will 
            receive the base64-encoded data URL. The default value is "src".
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.ImagePreviewOptions.WrapperSelector">
            <summary>
            Gets or sets the DOM query selector for the element that is wrapped around
            the auto-generated image (e.g. '#auto-image-wrapper', '.image-wrapper', etc.)
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.ImagePreviewOptions.Width">
            <summary>
            Gets or sets the preferred width of the thumbnail to be generated.
            If <see cref="P:BlazorFormManager.IO.ImagePreviewOptions.PreserveAspectRatio"/> is true, it's enough to set only the <see cref="P:BlazorFormManager.IO.ImagePreviewOptions.Width"/>.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.ImagePreviewOptions.Height">
            <summary>
            Gets or sets the preferred height of the thumbnail to be generated.
            If <see cref="P:BlazorFormManager.IO.ImagePreviewOptions.PreserveAspectRatio"/> is true, it's enough to set only the <see cref="P:BlazorFormManager.IO.ImagePreviewOptions.Height"/>.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.ImagePreviewOptions.NoResize">
            <summary>
            Indicates whether to disable dynamic image resizing.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.ImagePreviewOptions.PreserveAspectRatio">
            <summary>
            Indicates whether to keep the original aspect ratio. The default value is true.
            </summary>
        </member>
        <member name="T:BlazorFormManager.IO.InputFileInfo">
            <summary>
            Represents information about a read input file.
            </summary>
        </member>
        <member name="M:BlazorFormManager.IO.InputFileInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.IO.InputFileInfo"/> class.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.InputFileInfo.LastModifiedDate">
            <summary>
            Gets or sets the last date on which a file was modified.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.InputFileInfo.Name">
            <summary>
            Gets or sets the name of a file.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.InputFileInfo.Size">
            <summary>
            Gets or sets the size in bytes of a file.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.InputFileInfo.Type">
            <summary>
            Gets or sets the type of a file.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.InputFileInfo.Dimensions">
            <summary>
            Gets or sets the dimensions of this <see cref="T:BlazorFormManager.IO.InputFileInfo"/> if it's an image.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.InputFileInfo.SizeAsString">
            <summary>
            Returns the string representation of the <see cref="P:BlazorFormManager.IO.InputFileInfo.Size"/> property value.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.InputFileInfo.LastModifiedDateAsString">
            <summary>
            Returns the string representation of the <see cref="P:BlazorFormManager.IO.InputFileInfo.LastModifiedDate"/> property value.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.InputFileInfo.IsImage">
            <summary>
            Determines whether this file is an image.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.InputFileInfo.IsVideo">
            <summary>
            Determines whether this file is a video.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.InputFileInfo.IsArchive">
            <summary>
            Determines whether this file is archived, compressed/zipped.
            This is a non-exhaustive test for the most common formats.
            </summary>
        </member>
        <member name="M:BlazorFormManager.IO.InputFileInfo.HasExtension(System.String[])">
            <summary>
            Determines whether this file has an extension of one of the specified <paramref name="extensions"/>.
            </summary>
            <param name="extensions">A list of file extensions to compare against.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.IO.InputFileInfo.HasTypeIndexOf(System.String[])">
            <summary>
            Determines whether this file's <see cref="P:BlazorFormManager.IO.InputFileInfo.Type"/> 
            contains a string in the specified <paramref name="types"/>.
            </summary>
            <param name="types">A list of string to compare against.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.IO.InputFileInfo.ToString">
            <summary>
            Returns the string representation of the current <see cref="T:BlazorFormManager.IO.InputFileInfo"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.IO.InputFileInfo.FileSizeToString(System.Double)">
            <summary>
            Converts the specified file size to a human-readable string representation.
            </summary>
            <param name="size">The size of a file.</param>
            <returns></returns>
        </member>
        <member name="T:BlazorFormManager.IO.IProgressTrack">
            <summary>
            When implemented by class, represents an object that keeps track of an ongoing operation.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.IProgressTrack.Current">
            <summary>
            Gets or sets the current value of the progress.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.IProgressTrack.Total">
            <summary>
            Gets or sets the total amount to completion.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.IProgressTrack.ProgressPercentage">
            <summary>
            Gets the progress percentage.
            </summary>
        </member>
        <member name="T:BlazorFormManager.IO.ProgressChangedEventArgs">
            <summary>
            Provides data for cancelable file read/upload event.
            </summary>
        </member>
        <member name="M:BlazorFormManager.IO.ProgressChangedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.IO.ProgressChangedEventArgs"/> class.
            </summary>
        </member>
        <member name="M:BlazorFormManager.IO.ProgressChangedEventArgs.#ctor(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:BlazorFormManager.IO.ProgressChangedEventArgs.EventType">
            <summary>
            Gets or sets the read progress event type.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.ProgressChangedEventArgs.BytesReadOrSent">
            <summary>
            Gets or sets the number of bytes read or sent so far.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.ProgressChangedEventArgs.TotalBytesToReadOrSend">
            <summary>
            Gets or sets the total number of bytes to read or send.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.ProgressChangedEventArgs.Error">
            <summary>
            Gets or sets the error message.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.ProgressChangedEventArgs.ProgressPercentage">
            <summary>
            Gets the upload or read progress percentage.
            </summary>
        </member>
        <member name="T:BlazorFormManager.IO.ProgressChangedEventType">
            <summary>
            Upload progress event types.
            </summary>
        </member>
        <member name="F:BlazorFormManager.IO.ProgressChangedEventType.Start">
            <summary>
            The upload has begun.
            </summary>
        </member>
        <member name="F:BlazorFormManager.IO.ProgressChangedEventType.Progress">
            <summary>
            Periodically delivered to indicate the amount of progress made so far.
            </summary>
        </member>
        <member name="F:BlazorFormManager.IO.ProgressChangedEventType.Complete">
            <summary>
            The upload completed successfully.
            </summary>
        </member>
        <member name="F:BlazorFormManager.IO.ProgressChangedEventType.Error">
            <summary>
            The upload failed due to an error.
            </summary>
        </member>
        <member name="F:BlazorFormManager.IO.ProgressChangedEventType.Abort">
            <summary>
            The upload operation was aborted.
            </summary>
        </member>
        <member name="F:BlazorFormManager.IO.ProgressChangedEventType.Timeout">
            <summary>
            The upload timed out because a reply did not arrive within 
            the time interval specified by the XMLHttpRequest.timeout.
            </summary>
        </member>
        <member name="F:BlazorFormManager.IO.ProgressChangedEventType.End">
            <summary>
            The upload finished. This event does not differentiate between
            success or failure, and is sent at the end of the upload regardless
            of the outcome. Prior to this event, one of <see cref="F:BlazorFormManager.IO.ProgressChangedEventType.Start"/>,
            <see cref="F:BlazorFormManager.IO.ProgressChangedEventType.Error"/>, <see cref="F:BlazorFormManager.IO.ProgressChangedEventType.Abort"/>, or <see cref="F:BlazorFormManager.IO.ProgressChangedEventType.Timeout"/>
            will already have been delivered to indicate why the upload ended.
            </summary>
        </member>
        <member name="T:BlazorFormManager.IO.ReadFileEventType">
            <summary>
            Provides enumerated values for a file reading event type.
            </summary>
        </member>
        <member name="F:BlazorFormManager.IO.ReadFileEventType.Start">
            <summary>
            The operation has started.
            </summary>
        </member>
        <member name="F:BlazorFormManager.IO.ReadFileEventType.Rejected">
            <summary>
            A file reading has been rejected.
            </summary>
        </member>
        <member name="F:BlazorFormManager.IO.ReadFileEventType.Processed">
            <summary>
            A file (not necessarily read) has been processed.
            </summary>
        </member>
        <member name="F:BlazorFormManager.IO.ReadFileEventType.End">
            <summary>
            The operation completed, regardless of success or failure.
            </summary>
        </member>
        <member name="T:BlazorFormManager.IO.ReadFileListEventArgs">
            <summary>
            Encapsulates data related to a file list read event.
            </summary>
        </member>
        <member name="M:BlazorFormManager.IO.ReadFileListEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.IO.ReadFileListEventArgs"/> class.
            </summary>
        </member>
        <member name="M:BlazorFormManager.IO.ReadFileListEventArgs.#ctor(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:BlazorFormManager.IO.ReadFileListEventArgs.Type">
            <summary>
            Gets or sets the type of the reading event.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.ReadFileListEventArgs.Reason">
            <summary>
            Gets or sets the reason of a file reading rejection.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.ReadFileListEventArgs.File">
            <summary>
            Gets or sets the file that was denied reading.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.ReadFileListEventArgs.Files">
            <summary>
            Gets or sets the files that were denied reading due to the 'multiple' 
            attribute restrictions.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.ReadFileListEventArgs.FilesRead">
            <summary>
            Gets or sets the number of files read so far.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.ReadFileListEventArgs.TotalFilesToRead">
            <summary>
            Gets or sets the number of files prepared to be read.
            </summary>
        </member>
        <member name="T:BlazorFormManager.IO.ReadFileRejection">
            <summary>
            Provides enumerated values for reasons a file reading operation was rejected.
            </summary>
        </member>
        <member name="F:BlazorFormManager.IO.ReadFileRejection.None">
            <summary>
            No reason.
            </summary>
        </member>
        <member name="F:BlazorFormManager.IO.ReadFileRejection.Extension">
            <summary>
            File extension is not allowed.
            </summary>
        </member>
        <member name="F:BlazorFormManager.IO.ReadFileRejection.Type">
            <summary>
            File type is not allowed.
            </summary>
        </member>
        <member name="F:BlazorFormManager.IO.ReadFileRejection.Multiple">
            <summary>
            Multiple files are not allowed.
            </summary>
        </member>
        <member name="F:BlazorFormManager.IO.ReadFileRejection.Aborted">
            <summary>
            Operation was aborted.
            </summary>
        </member>
        <member name="T:BlazorFormManager.IO.UploadProgressChangedEventArgs">
            <summary>
             Encapsulates data related to a form upload event.
            </summary>
        </member>
        <member name="M:BlazorFormManager.IO.UploadProgressChangedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.IO.UploadProgressChangedEventArgs"/> class.
            </summary>
        </member>
        <member name="M:BlazorFormManager.IO.UploadProgressChangedEventArgs.#ctor(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="cancel"></param>
        </member>
        <member name="P:BlazorFormManager.IO.UploadProgressChangedEventArgs.BytesSent">
            <summary>
            Gets or sets the number of bytes sent so far.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.UploadProgressChangedEventArgs.TotalBytesToSend">
            <summary>
            Gets or sets the total number of bytes to send.
            </summary>
        </member>
        <member name="P:BlazorFormManager.IO.UploadProgressChangedEventArgs.HasFiles">
            <summary>
            Indicates whether a form upload contains files.
            </summary>
        </member>
        <member name="T:BlazorFormManager.LocalStorage">
            <summary>
            Represents an instance of a limited JavaScript runtime to which 
            localStorage-related calls may be dispatched through the BlazorFormManager.js script.
            </summary>
        </member>
        <member name="M:BlazorFormManager.LocalStorage.Create(Microsoft.JSInterop.IJSRuntime)">
            <summary>
            Create a new instance of the <see cref="T:BlazorFormManager.LocalStorage"/> class using the 
            specified <see cref="T:Microsoft.JSInterop.IJSRuntime"/>.
            </summary>
            <param name="jSRuntime">The JavaScript runtime instance to which calls are dispatched.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="jSRuntime"/> is null.</exception>
        </member>
        <member name="M:BlazorFormManager.LocalStorage.#ctor(Microsoft.JSInterop.IJSRuntime)">
            <summary>
            Initializes new instance of the <see cref="T:BlazorFormManager.LocalStorage"/> class using 
            the specified <see cref="T:Microsoft.JSInterop.IJSRuntime"/>.
            </summary>
            <param name="jSRuntime">The JavaScript runtime instance to which calls are dispatched.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="jSRuntime"/> is null.</exception>
        </member>
        <member name="M:BlazorFormManager.LocalStorage.SetItemAsync``1(System.String,``0,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Serializes the specified <paramref name="value"/> and 
            invokes the localStorage.setItem function asynchronously.
            </summary>
            <typeparam name="T">The type of the value to serialize.</typeparam>
            <param name="key">The key of the item to set in localStorage.</param>
            <param name="value">The value to serialize and set in the localStorage.</param>
            <param name="options">Options to control serialization behaviour.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.LocalStorage.SetItemAsync(System.String,System.String)">
            <summary>
            Adds the specified key to the storage, or updates that key's value if it already exists asynchronously.
            </summary>
            <param name="key">The key of the item to set in localStorage.</param>
            <param name="value">The value to set in the localStorage.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.LocalStorage.GetItemAsync(System.String)">
            <summary>
            Returns the specified key's value asynchronously.
            </summary>
            <param name="key">The key of the value to retrieve.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.LocalStorage.GetItemAsync``1(System.String,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Retrieves the specified key's value, deserializes and returns it asynchronously.
            </summary>
            <typeparam name="T">The type of the stored value.</typeparam>
            <param name="key">The key of the value to retrieve.</param>
            <param name="options">Options to control the behaviour during deserialization.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.LocalStorage.RemoveItemAsync(System.String)">
            <summary>
            Removes the key from the storage asynchronously.
            </summary>
            <param name="key">The key of the value to remove.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.LocalStorage.SetAuthorizationTokenAsync(System.String)">
            <summary>
            Adds the specified authorization token to the storage asynchronously.
            </summary>
            <param name="token">The authorization token to store.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.LocalStorage.GetAuthorizationTokenAsync">
            <summary>
            Returns a previously stored authorization token asynchronously.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.LocalStorage.RemoveAuthorizationTokenAsync">
            <summary>
            Removes a previously stored authorization token asynchronously.
            </summary>
            <returns></returns>
        </member>
        <member name="T:BlazorFormManager.ModelRequestedEventArgs">
            <summary>
            Contains data related to the <see cref="P:BlazorFormManager.Components.FormManagerBase.OnModelRequested"/> event.
            </summary>
        </member>
        <member name="M:BlazorFormManager.ModelRequestedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.ModelRequestedEventArgs"/> class.
            </summary>
        </member>
        <member name="P:BlazorFormManager.ModelRequestedEventArgs.Model">
            <summary>
            Gets or sets the model to be submitted.
            </summary>
        </member>
        <member name="T:BlazorFormManager.SelectOption">
            <summary>
            Represents an select element option.
            </summary>
        </member>
        <member name="M:BlazorFormManager.SelectOption.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.SelectOption"/> class.
            </summary>
        </member>
        <member name="M:BlazorFormManager.SelectOption.#ctor(System.Object,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.SelectOption"/> class
            using the specified parameters.
            </summary>
            <param name="id">The option identifier.</param>
            <param name="value">The option value.</param>
            <param name="isPrompt">true if this is the default option; otherwise, false.</param>
        </member>
        <member name="P:BlazorFormManager.SelectOption.Id">
            <summary>
            Gets or sets the identifier of the option.
            </summary>
        </member>
        <member name="P:BlazorFormManager.SelectOption.Value">
            <summary>
            Gets or sets the value of the option.
            </summary>
        </member>
        <member name="P:BlazorFormManager.SelectOption.IsPrompt">
            <summary>
            Gets or sets a value that indicates whether the option is the default.
            </summary>
        </member>
        <member name="T:BlazorFormManager.SelectOptionList">
            <summary>
            Represents a collection of <see cref="T:BlazorFormManager.SelectOption"/> items.
            </summary>
        </member>
        <member name="M:BlazorFormManager.SelectOptionList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.SelectOptionList"/> class.
            </summary>
        </member>
        <member name="M:BlazorFormManager.SelectOptionList.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.SelectOptionList"/> class
            using the specified parameter.
            </summary>
            <param name="propertyName">The associated model property to which this list belongs.</param>
        </member>
        <member name="M:BlazorFormManager.SelectOptionList.#ctor(System.Collections.Generic.IEnumerable{BlazorFormManager.SelectOption}[])">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.SelectOptionList"/>
            class using the specified collection.
            </summary>
            <param name="collection">An array of collections whose elements should be added to the end of the underlying list.</param>
        </member>
        <member name="M:BlazorFormManager.SelectOptionList.#ctor(System.String,System.Collections.Generic.IEnumerable{BlazorFormManager.SelectOption}[])">
            <summary>
            Initializes a new instance of the <see cref="T:BlazorFormManager.SelectOptionList"/> class
            using the specified parameters.
            </summary>
            <param name="propertyName">The associated model property to which this list belongs.</param>
            <param name="collection">An array of collections whose elements should be added to the end of the underlying list.</param>
        </member>
        <member name="P:BlazorFormManager.SelectOptionList.Items">
            <summary>
            Gets a collection of <see cref="T:BlazorFormManager.SelectOption"/> elements.
            </summary>
        </member>
        <member name="P:BlazorFormManager.SelectOptionList.PropertyName">
            <summary>
            Gets or sets the name of the associated model property for this list.
            </summary>
        </member>
        <member name="P:BlazorFormManager.SelectOptionList.GroupName">
            <summary>
            Gets or sets the option group name (e.g. &lt;optgroup>)
            </summary>
        </member>
        <member name="T:BlazorFormManager.TypeExtensions">
            <summary>
            Provides extension methods for types.
            </summary>
        </member>
        <member name="M:BlazorFormManager.TypeExtensions.GenerateId(System.Type)">
            <summary>
            Generates a globally unique identifier for the specified type.
            </summary>
            <param name="type">The type whose name will be prefixed to the identifier.</param>
            <returns></returns>
        </member>
        <member name="M:BlazorFormManager.TypeExtensions.GenerateId(System.String)">
            <summary>
            Generates a globally unique identifier for the specified string.
            </summary>
            <param name="name">The name used to prefix the identifier.</param>
            <returns></returns>
        </member>
    </members>
</doc>
