@typeparam TModel
@inherits AutoEditFormBase<TModel>

@if (EditContext != null)
{
    <div class="auto-edit-form">
        <EditForm EditContext="EditContext" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit" id="@FormId" action="@FormAction" method="@FormMethod" enctype="multipart/form-data" @attributes="AdditionalAttributes">
            @*
            This issues a cascaded parameter to instances of the AutoInputBase component
            so that it can access FormManagerBase-related members, such as OptionsGetter, etc.
            *@
            <CascadingValue Value="this">
                @if (FormHeader != null)
                {
                    <div class="form-header">@FormHeader</div>
                }
                <div class="form-body">
                    <div class="form-display-group">
                        @if (BeforeDisplayGroups != null)
                        {
                            <div class="before-display-groups">@BeforeDisplayGroups</div>
                        }
                        @if (DisplayGroups?.Count > 0)
                        {
                            <div class="display-groups">
                                @foreach (FormDisplayGroupMetadata data in DisplayGroups)
                                {
                                    <FormDisplayGroup Metadata="data" />
                                }
                            </div>
                        }
                        @if (AfterDisplayGroups != null)
                        {
                            <div class="after-display-groups">@AfterDisplayGroups</div>
                        }
                    </div>
                    @if (ChildContent != null)
                    {
                        <div class="child-content">
                            @ChildContent
                        </div>
                    }
                </div>
                @if (FormFooter != null)
                {
                    <div class="form-footer">@FormFooter</div>
                }
            </CascadingValue>
        </EditForm>
        <FormSubmitResultView Result="SubmitResult" />
        @if (EnableProgressBar && IsRunning)
        {
            <Html5ProgressBar Progress="(Progress ?? (BlazorFormManager.IO.ProgressChangedEventArgs)ReadProgress)" 
                              StatusMessage="@Status" 
                              CanCancel="CanCancelUpload" 
                              OnCancelRequested="() => AbortRequested = true"
                              ElapsedMilliseconds="Stopwatch?.ElapsedMilliseconds"
                              HideCancelButton="IsReadingFileList"
                              HideElapsedMilliseconds="IsReadingFileList"/>
            if (IsReadingFileList)
            {
                <Html5ProgressBar Progress="ReadFileListProgress"
                                  StatusMessage="@ReadFileListStatus"
                                  OnCancelRequested="() => AbortRequested = true"
                                  ElapsedMilliseconds="Stopwatch?.ElapsedMilliseconds" />
            }
        }
        @if (IsDebug)
        {
            <FormDebugInfo Model="XhrResult" Options="DebugOptions" />
            <UnsupportedBrowserProperties Model="AjaxUploadNotSupported?.ExtraProperties" />
        }
    </div>
}
