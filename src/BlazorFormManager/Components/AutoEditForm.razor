@typeparam TModel
@inherits AutoEditFormBase<TModel>

@if (EditContext != null)
{
    <div class="auto-edit-form">
        <EditForm EditContext="EditContext" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit" id="@FormId" action="@FormAction" method="@FormMethod" enctype="multipart/form-data" @attributes="AdditionalAttributes">
            @if (HeaderZone != null)
            {
                <div class="header-zone">@HeaderZone</div>
            }
            <div class="form-body">
                <div class="form-display-group">
                    @if (BeforeDisplayGroups != null)
                    {
                        <div class="before-display-groups">@BeforeDisplayGroups</div>
                    }
                    @if (DisplayGroups?.Count > 0)
                    {
                        // This issues a cascaded parameter to instances of the AutoInputBase component
                        // so that it can access FormManagerBase-related members, such as OptionsGetter, etc.
                        <CascadingValue Value="this">
                            <div class="display-groups">
                                @foreach (FormDisplayGroupMetadata data in DisplayGroups)
                                {
                                    <FormDisplayGroup Metadata="data" />
                                }
                            </div>
                        </CascadingValue>
                    }
                    @if (AfterDisplayGroups != null)
                    {
                        <div class="after-display-groups">@AfterDisplayGroups</div>
                    }
                </div>
                <div class="child-content">
                    @ChildContent
                </div>
            </div>
            @if (FooterZone != null)
            {
                <div class="footer-zone">@FooterZone</div>
            }
        </EditForm>
        <FormSubmitResultView Result="SubmitResult" />
        @if (EnableProgressBar && IsUploadingFiles)
        {
            <UploadProgressBar Progress="Progress" UploadStatusMessage="@UploadStatus" OnCancelRequested="() => AbortRequested = true" />
        }
        @if (IsDebug)
        {
            <FormDebugInfo Model="XhrResult" Options="DebugOptions" />
            <UnsupportedBrowserProperties Model="AjaxUploadNotSupported?.ExtraProperties" />
        }
    </div>
}
